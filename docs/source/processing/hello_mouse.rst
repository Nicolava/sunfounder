 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _hello_mouse:

Bonjour Souris
====================

Dans ce projet, votre souris continuera de tirer des lignes vers un point ; d√©placez la souris et vous dessinerez une ligne unique d'√©toiles. Appuyez sur la souris pour red√©marrer le dessin.

.. image:: img/hello_mouse1.png

**Croquis**

.. code-block:: arduino

    int pointX = 172;
    int pointY = 88;

    void setup() {
        size(400, 400);
        stroke(255);
        background(192, 16, 18);
    }

    void draw() {
        line(pointX, pointY, mouseX, mouseY);
    }

    void mousePressed() {
        pointX=mouseX;
        pointY=mouseY;
        background(192, 16, 18);
    }

**Comment √ßa fonctionne ?**

Le projet pr√©c√©dent dessinait une seule image sans aucune animation ni interaction.

Si nous voulons cr√©er un croquis interactif, nous devons ajouter les fonctions ``setup()`` et ``draw()`` (ce sont des fonctions int√©gr√©es qui sont appel√©es automatiquement) pour construire le cadre.

* ``setup()`` : Ex√©cut√© une seule fois au d√©marrage du croquis.
* ``draw()`` : Ex√©cut√© de mani√®re r√©p√©t√©e, o√π nous ajoutons g√©n√©ralement le croquis pour dessiner l'animation.

.. code-block:: arduino

    int pointX = 172;
    int pointY = 88;

    void setup() {
        size(400, 400);
        stroke(255);
        background(192, 16, 18);
    }

    void draw() {
        line(pointX, pointY, mouseX, mouseY);
    }

Ce croquis ci-dessus fonctionne d√©j√† sans probl√®me en tant que croquis interactif.

Ensuite, vous pouvez ajouter un √©v√©nement de clic de souris. Cet √©v√©nement peut √™tre impl√©ment√© avec la fonction ``mousePressed()``, o√π nous ajoutons des instructions pour actualiser le point cible et effacer l'√©cran.

.. code-block:: arduino

    int pointX = 172;
    int pointY = 88;

    void setup() {
        size(400, 400);
        stroke(255);
        background(192, 16, 18);
    }

    void draw() {
        line(pointX, pointY, mouseX, mouseY);
    }

    void mousePressed() {
        pointX=mouseX;
        pointY=mouseY;
        background(192, 16, 18);
    }

Pour plus d'informations, veuillez vous r√©f√©rer √† `Processing Reference <https://processing.org/reference/>`_.
