.. note::

    ¬°Hola! Bienvenido a la Comunidad de Entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. Sum√©rgete en el mundo de Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte experto**: Resuelve problemas postventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Vistas previas exclusivas**: Obt√©n acceso anticipado a nuevos anuncios de productos y adelantos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones especiales.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo.

.. _1.13_scratch_pi5:

1.13 Timbre
====================

Hoy haremos un timbre, haz clic en el sprite Button3 en el escenario, el buzzer sonar√°; haz clic nuevamente, el buzzer dejar√° de sonar.

.. image:: img/1.13_header.png

Componentes necesarios
---------------------------

En este proyecto, necesitamos los siguientes componentes.

.. image:: img/1.13_list.png

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre
        - ART√çCULOS EN ESTE KIT
        - ENLACE
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_buzzer`
        - \-
    *   - :ref:`cpn_transistor`
        - |link_transistor_buy|

Construir el circuito
------------------------

.. image:: img/1.13_image106.png

Cargar el c√≥digo y ver qu√© pasa
-------------------------------------

Carga el archivo de c√≥digo (``1.13_doorbell.sb3``) a Scratch 3.

Haz clic en la bandera verde en el escenario. Cuando hagamos clic en el sprite Button 3, se pondr√° azul y luego el buzzer sonar√°; cuando volvamos a hacer clic, el sprite **Button3** volver√° a gris y el buzzer dejar√° de sonar.


Consejos sobre sprites
------------------------------

Elimina el sprite predeterminado, luego elige el sprite **Button 3**.

.. image:: img/1.13_scratch_button3.png

Luego ajusta el tama√±o a 200.

.. image:: img/1.13_scratch_button3_size.png

Consejos sobre los c√≥digos
------------------------------

.. image:: img/1.13_buzzer4.png
  :width: 400

Este bloque te permite cambiar el disfraz del sprite.

.. image:: img/1.13_buzzer5.png
  :width: 400


Configura gpio17 a bajo para hacer sonar el buzzer; config√∫ralo a alto y el buzzer no sonar√°.

El **interruptor de estado** se usa aqu√≠, y utilizaremos un diagrama de flujo para ayudarte a entender todo el c√≥digo.

Cuando se hace clic en la bandera verde, el **estado** se establecer√° primero en 0 y esperar√° a que se haga clic en el sprite; si se hace clic en el sprite **button3**, cambiar√° al disfraz **button-b** (azul) y el **estado** se establecer√° en 1. Cuando el programa principal reciba el **estado** como 1, har√° que el buzzer suene a intervalos de 0.1s. Si se vuelve a hacer clic en **button3**, cambiar√° al disfraz **button-a** (gris) y el **estado** se establecer√° nuevamente en 0.

.. image:: img/1.13_scratch_code.png
