.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _1.13_scratch:

1.13 T√ºrklingel
==================

Heute bauen wir eine T√ºrklingel. Klicken Sie auf das Sprite ‚Äûbutton3‚Äú auf der B√ºhne, dann ert√∂nt das Summen; klicken Sie erneut, dann h√∂rt das Summen auf.

.. image:: img/1.13_header.png

Ben√∂tigte Komponenten
------------------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

.. image:: img/1.13_list.png

Es ist definitiv praktisch, ein gesamtes Set zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie k√∂nnen diese auch einzeln √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_buzzer`
        - \-
    *   - :ref:`cpn_transistor`
        - |link_transistor_buy|

Schaltkreis aufbauen
---------------------

.. image:: img/1.13_image106.png

Laden Sie den Code und sehen Sie, was passiert
------------------------------------------------

Laden Sie die Code-Datei (``1.13_doorbell.sb3``) in Scratch 3.

Klicken Sie auf die gr√ºne Fahne auf der B√ºhne. Wenn wir auf das Sprite ‚ÄûButton 3‚Äú klicken, wird es blau und der Summer ert√∂nt; klicken wir erneut, kehrt das **Button3** Sprite zu Grau zur√ºck und der Summer h√∂rt auf zu summen.

Tipps zu Sprites
----------------

L√∂schen Sie das Standard-Sprite und w√§hlen Sie dann das Sprite **Button 3** aus.

.. image:: img/1.13_scratch_button3.png

Stellen Sie anschlie√üend die Gr√∂√üe auf 200 ein.

.. image:: img/1.13_scratch_button3_size.png

Tipps zu Codes
--------------

.. image:: img/1.13_buzzer4.png
  :width: 400

Dieser Block erm√∂glicht das Wechseln des Sprites-Kost√ºms.

.. image:: img/1.13_buzzer5.png
  :width: 400

Setzen Sie gpio17 auf niedrig, damit der Summer ert√∂nt; setzen Sie ihn auf hoch und der Summer wird nicht ert√∂nen.

Der **status** Schalter wird hier verwendet, und wir werden ein Flussdiagramm verwenden, um Ihnen zu helfen, den gesamten Code zu verstehen.

Wenn auf die gr√ºne Fahne geklickt wird, wird **status** zuerst auf 0 gesetzt und wartet zu diesem Zeitpunkt darauf, dass das Sprite angeklickt wird; wenn das **button3** Sprite angeklickt wird, wechselt es zum Kost√ºm **button-b** (blau) und **status** wird auf 1 gesetzt. Wenn das Hauptprogramm den **status** als 1 empf√§ngt, l√§sst es den Summer in 0,1s-Intervallen ert√∂nen.
Wenn **button3** erneut angeklickt wird, wechselt es zum Kost√ºm **button-a** (grau) und **status** wird wieder auf 0 gesetzt.

.. image:: img/1.13_scratch_code.png
