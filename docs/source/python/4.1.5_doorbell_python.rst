.. _4.1.5_py:

4.1.5 Intelligente visuelle Türklingel
==========================================

Einführung
-----------------

In diesem Projekt erstellen wir eine DIY intelligente visuelle Türklingel.

Benötigte Komponenten
------------------------------

Für dieses Projekt benötigen wir die folgenden Komponenten.

.. image:: ../img/3.1.19components.png
  :width: 800
  :align: center

Es ist definitiv praktisch, ein ganzes Kit zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie können diese auch separat über die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`breadboard`
        - |link_breadboard_buy|
    *   - :ref:`wires`
        - |link_wires_buy|
    *   - :ref:`resistor`
        - |link_resistor_buy|
    *   - :ref:`button`
        - |link_button_buy|
    *   - :ref:`audio_speaker`
        - \-
    *   - :ref:`camera_module`
        - |link_camera_buy|


Schaltplan
-----------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO27       Pin 13   2        27
============ ======== ======== ===

.. image:: ../img/3.1.19_schematic.png
   :width: 500
   :align: center

Experimentelle Verfahren
----------------------------

**Schritt 1:** Bauen Sie den Schaltkreis.

.. image:: ../img/3.1.19fritzing.png
  :width: 800
  :align: center

Vor diesem Projekt sollten Sie sicherstellen, dass Sie :ref:`3.1.3_py` & :ref:`3.1.2_py` abgeschlossen haben.

**Schritt 2:** Navigieren Sie zum Ordner des Codes.

.. raw:: html

    <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**Schritt 3:** Starten Sie den Code.

.. raw:: html

    <run></run>

.. code-block::

    python3 4.1.5_DoorBell.py

Nachdem der Code ausgeführt wurde, wird beim Drücken des Knopfes ein Klingelton erzeugt und die Kamera nimmt ein 5s Video auf, das als Datei ``visitor.h264`` im Verzeichnis ``~`` gespeichert wird. Wenn Sie einen Bildschirm haben, können Sie die Besucher auch in Echtzeit im Vorschauvideo sehen.

**Code**

.. note::
    Sie können den untenstehenden Code **Ändern/Zurücksetzen/Kopieren/Ausführen/Stoppen**. Aber zuvor sollten Sie zum Quellcode-Pfad wie ``raphael-kit/python`` navigieren. Nach der Änderung des Codes können Sie ihn direkt ausführen, um das Ergebnis zu sehen.

.. raw:: html

    <run></run>

.. code-block:: python

    #!/usr/bin/env python3
    from picamera import PiCamera
    from pygame import mixer
    import RPi.GPIO as GPIO
    import time
    import os
    user = os.getlogin()
    user_home = os.path.expanduser(f'~{user}')


    camera = PiCamera()

    BtnPin = 18
    status = False

    def setup():
        GPIO.setmode(GPIO.BCM)
        GPIO.setup(BtnPin, GPIO.IN, GPIO.PUD_UP)
        mixer.init()

    def takePhotos(pin):
        global status
        status = True

    def main():
        global status
        GPIO.add_event_detect(BtnPin, GPIO.FALLING, callback=takePhotos)
        while True:
            if status:
                mixer.music.load(f'{user_home}/raphael-kit/music/doorbell.wav')
                mixer.music.set_volume(0.7)
                mixer.music.play()
                camera.start_preview(alpha=200)
                camera.start_recording(f'{user_home}/visitor.h264')
                print ('Have a visitor')
                time.sleep(5)
                mixer.music.stop()
                camera.stop_preview()
                camera.stop_recording()
                status = False 

    def destroy():
        GPIO.cleanup()
        mixer.music.stop()
        camera.stop_preview()
        camera.stop_recording()

    if __name__ == '__main__':
        setup()
        try:
            main()
        except KeyboardInterrupt:
            destroy()

**Code-Erklärung**

.. code-block:: python

    status = False

Dies ist ein Flag, um aufzuzeichnen, ob die Türklingel verwendet wird.

.. code-block:: python

    GPIO.add_event_detect(BtnPin, GPIO.FALLING, callback=takePhotos)

Setzt das Ereignis von ``BtnPin``. Wenn der Knopf gedrückt wird (das Signalsniveau ändert sich von hoch auf niedrig), wird die Funktion ``takePhotos()`` aufgerufen.

.. code-block:: python

    if status:
        mixer.music.load(f'{user_home}/raphael-kit/music/doorbell.wav')
        mixer.music.set_volume(0.7)
        mixer.music.play()
        camera.start_preview(alpha=200)
        camera.start_recording(f'{user_home}/visitor.h264')
        print ('Have a visitor')
        time.sleep(5)
        mixer.music.stop()
        camera.stop_preview()
        camera.stop_recording()
        status = False 

Hier werden fünf Sekunden verwendet, um Musik zu spielen und Videos aufzunehmen, wodurch sie als Türklingel fungiert.

Phänomen-Bild
------------------------

.. image:: ../img/4.1.5door_bell.JPG
   :align: center


