.. _3.1.4_py:

3.1.4 Text-in-Sprache
=======================

Einführung
-----------------

An vielen Orten können wir mit TTS-Technologie (Text-in-Sprache) in Kontakt kommen, die Text in natürliche Sprache umwandelt und den Menschen ein gutes interaktives Erlebnis bietet.

Probieren Sie, Ihrem Projekt das Sprechen beizubringen.

Benötigte Komponenten
------------------------------

Für dieses Projekt benötigen wir die folgenden Komponenten.

.. image:: ../img/audio2.png
  :width: 700
  :align: center

Es ist definitiv praktisch, ein komplettes Set zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie können sie auch einzeln über die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_audio_speaker`
        - \-

Experimentelle Verfahren
----------------------------

**Schritt 1:** Schalten Sie den Schaltkreis.

.. image:: ../img/4.1.4fritzing.png
  :width: 800
  :align: center   

Nachdem Sie den Schaltkreis entsprechend dem obigen Diagramm aufgebaut haben, stecken Sie das Audiokabel in die 3,5-mm-Audiobuchse des Raspberry Pi.

.. image:: ../img/audio4.png
    :width: 400
    :align: center

**Schritt 2:** Installieren Sie das Modul ``espeak``.

.. raw:: html

   <run></run>

.. code-block::

    sudo apt-get install espeak -y

**Schritt 3:** Wechseln Sie in den Ordner des Codes.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**Schritt 4:** Starten.

.. raw:: html

   <run></run>

.. code-block::

    python3 3.1.4_Text-to-speech.py

Nachdem der Code ausgeführt wurde, wird der Raspberry Pi Sie freundlich begrüßen und sich verabschieden, wenn der Code gestoppt wird.

.. note::

    Wenn aus Ihrem Lautsprecher kein Ton kommt, liegt es möglicherweise daran, dass der Raspberry Pi den falschen Audioausgang ausgewählt hat (standardmäßig HDMI). Sie müssen den Audioausgang auf :ref:`change_audio_output` Kopfhörer umstellen.

    Wenn Sie das Gefühl haben, dass die Lautstärke der Lautsprecher zu niedrig ist, können Sie die :ref:`adjust_volume` Lautstärke anpassen.

**Code**

.. note::
    Sie können den untenstehenden Code **Modifizieren/Zurücksetzen/Kopieren/Starten/Stoppen**. Bevor Sie das tun, müssen Sie zum Quellcode-Pfad wie ``raphael-kit/python`` navigieren. Nachdem Sie den Code modifiziert haben, können Sie ihn direkt ausführen, um den Effekt zu sehen. Nach Bestätigung, dass keine Probleme vorliegen, können Sie mit der Kopieren-Schaltfläche den geänderten Code kopieren, dann den Quellcode im Terminal über den ``nano``-Befehl öffnen und einfügen.

.. raw:: html

    <run></run>

.. code-block:: python

    from tts import TTS

    tts = TTS(engine="espeak")
    tts.lang('en-US')

    def main():
        tts.say('Hello, nice to meet you!')

    def destroy():
        tts.say('See you later')

    if __name__ == '__main__':
        try:
            main()
        except KeyboardInterrupt:
            destroy()

**Code-Erklärung**

.. code-block:: python

    from tts import TTS

    tts = TTS(engine="espeak")

Importieren Sie die TTS-Klasse und instanziieren Sie ein Objekt.

.. code-block:: python

    tts.lang('en-US')

Legen Sie die Sprache fest.

.. note::
    Derzeit wird nur Englisch als umschaltbare Sprache unterstützt.

.. code-block:: python

    tts.say("Hello, nice to meet you!")

Geben Sie den zu sprechenden Text als Parameter ein. Nach der Ausführung von ``tts.say()`` wird der Raspberry Pi den von Ihnen geschriebenen Text aussprechen.

Phänomen-Bild
------------------------

.. image:: ../img/3.1.3audio.JPG
   :align: center
