.. note::

    ¡Hola, bienvenido a la Comunidad de Entusiastas de SunFounder Raspberry Pi, Arduino y ESP32 en Facebook! Profundiza en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¿Por qué unirse?**

    - **Soporte experto**: Resuelve problemas postventa y desafíos técnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Previews exclusivos**: Accede anticipadamente a anuncios de nuevos productos y adelantos exclusivos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos más recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones de temporada.

    👉 ¿Listo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y únete hoy mismo.

.. _3.1.4_py:

3.1.4 Conversión de Texto a Voz
====================================

Introducción
------------------

En muchos lugares, podemos entrar en contacto con la tecnología TTS (Text-to-speech), que convierte texto en voz natural y ofrece a las personas una buena experiencia interactiva.

Vamos a hacer que tu proyecto hable.


Componentes necesarios
------------------------------

En este proyecto, necesitamos los siguientes componentes. 

.. image:: ../img/audio2.png
    :width: 700
    :align: center

Es definitivamente conveniente comprar un kit completo, aquí está el enlace: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

También puedes comprarlos por separado en los enlaces a continuación.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCIÓN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_audio_speaker`
        - \-

Procedimientos experimentales
-------------------------------------

**Paso 1:** Construye el circuito.

.. image:: ../img/4.1.4fritzing.png
  :width: 800
  :align: center   

Después de construir el circuito según el diagrama anterior, conecta el cable de audio en la salida de 3.5mm de la Raspberry Pi.

.. image:: ../img/audio4.png
    :width: 400
    :align: center

**Paso 2:** Instala el módulo ``espeak``.

.. raw:: html

   <run></run>

.. code-block::

    sudo apt-get install espeak -y

**Paso 3:** Ve a la carpeta del código.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**Paso 4:** Ejecuta el código.

.. raw:: html

   <run></run>

.. code-block::

    python3 3.1.4_Text-to-speech.py

La Raspberry Pi te saludará amablemente después de ejecutar el código, y se despedirá cuando el código se detenga.

.. note::

    Si tus altavoces no tienen sonido, puede ser porque la Raspberry Pi ha seleccionado la salida de audio incorrecta (el predeterminado es HDMI), necesitas :ref:`change_audio_output` a auriculares.

    Si sientes que el volumen de los altavoces es demasiado bajo, puedes :ref:`adjust_volume`.
**Código**

.. note::
    Puedes **Modificar/Restablecer/Copiar/Ejecutar/Detener** el código a continuación. Pero antes de eso, necesitas ir a la ruta del código fuente como ``raphael-kit/python``. Después de modificar el código, puedes ejecutarlo directamente para ver el efecto. Después de confirmar que no hay problemas, puedes usar el botón Copiar para copiar el código modificado, luego abre el código fuente en el Terminal usando el comando ``nano`` y pégalo.

.. raw:: html

    <run></run>

.. code-block:: python

    from tts import TTS

    tts = TTS(engine="espeak")
    tts.lang('en-US')

    def main():
        tts.say('Hello, nice to meet you!')

    def destroy():
        tts.say('See you later')

    if __name__ == '__main__':
        try:
            main()
        except KeyboardInterrupt:
            destroy()

**Explicación del Código**

.. code-block:: python

    from tts import TTS

    tts = TTS(engine="espeak")

Importa la clase TTS e instancia un objeto.

.. code-block:: python

    tts.lang('en-US')

Establece el idioma.

.. note::
    Actualmente, el cambio de idioma solo soporta inglés.

.. code-block:: python

    tts.say("Hello, nice to meet you!")

Rellena el texto que se va a decir como un parámetro. Después de ejecutar ``tts.say()``, la Raspberry Pi dirá el texto que escribiste.

Imagen del Fenómeno
--------------------------

.. image:: ../img/3.1.3audio.JPG
   :align: center
