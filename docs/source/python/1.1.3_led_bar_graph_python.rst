.. note::

    Hola, ¬°bienvenido a la comunidad de entusiastas de SunFounder Raspberry Pi, Arduino y ESP32 en Facebook! Sum√©rgete m√°s en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte experto**: Resuelve problemas post-venta y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Avances exclusivos**: Obt√©n acceso anticipado a anuncios de nuevos productos y adelantos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones festivas.

    üëâ ¬øListo para explorar y crear con nosotros? ¬°Haz clic en [|link_sf_facebook|] y √∫nete hoy!

.. _1.1.3_py:

1.1.3 Gr√°fico de barras LED
=============================

Introducci√≥n
----------------

En este proyecto, iluminaremos secuencialmente las luces en el gr√°fico de barras LED.

Componentes necesarios
----------------------------------

En este proyecto, necesitamos los siguientes componentes.

.. image:: ../img/list_led_bar.png

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DE COMPONENTES
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_bar_graph`
        - \-

Diagrama esquem√°tico
-------------------------

============== ========== ======== ===
Nombre T-Board Pin f√≠sico wiringPi BCM
GPIO17         Pin 11     0        17
GPIO18         Pin 12     1        18
GPIO27         Pin 13     2        27
GPIO22         Pin 15     3        22
GPIO23         Pin 16     4        23
GPIO24         Pin 18     5        24
GPIO25         Pin 22     6        25
SDA1           Pin 3      8        2
SCL1           Pin 5      9        3
SPICE0         Pin 24     10       8
============== ========== ======== ===

.. image:: ../img/schematic_led_bar.png

Procedimientos experimentales
------------------------------

**Paso 1**: Construir el circuito.

.. note::

    Presta atenci√≥n a la direcci√≥n al conectar. Si lo conectas al rev√©s, no se encender√°.

.. image:: ../img/image66.png

**Paso 2:** Ve a la carpeta del c√≥digo.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**Paso 3**: Ejecuta el archivo ejecutable.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 1.1.3_LedBarGraph.py

Despu√©s de ejecutar el c√≥digo, ver√°s que los LEDs en la barra LED se encienden y apagan regularmente.

**C√≥digo**

.. note::

    Puedes **Modificar/Restablecer/Copiar/Ejecutar/Detener** el c√≥digo a continuaci√≥n. Pero antes de eso, necesitas ir a la ruta del c√≥digo fuente como ``raphael-kit/python``. Despu√©s de modificar el c√≥digo, puedes ejecutarlo directamente para ver el efecto.

.. raw:: html

    <run></run>

.. code-block:: python

    import RPi.GPIO as GPIO
    import time

    ledPins = [11, 12, 13, 15, 16, 18, 22, 3, 5, 24]

    def oddLedBarGraph():
        for i in range(5):
            j = i*2
            GPIO.output(ledPins[j],GPIO.LOW)
            time.sleep(0.3)
            GPIO.output(ledPins[j],GPIO.HIGH)

    def evenLedBarGraph():
        for i in range(5):
            j = i*2+1
            GPIO.output(ledPins[j],GPIO.LOW)
            time.sleep(0.3)
            GPIO.output(ledPins[j],GPIO.HIGH)

    def allLedBarGraph():
        for i in ledPins:
            GPIO.output(i,GPIO.LOW)
            time.sleep(0.3)
            GPIO.output(i,GPIO.HIGH)

    def setup():
        GPIO.setwarnings(False)
        GPIO.setmode(GPIO.BOARD)        # Numbers GPIOs by physical location
        for i in ledPins:
            GPIO.setup(i, GPIO.OUT)   # Set all ledPins' mode is output
            GPIO.output(i, GPIO.HIGH) # Set all ledPins to high(+3.3V) to off led

    def loop():
        while True:
            oddLedBarGraph()
            time.sleep(0.3)
            evenLedBarGraph()
            time.sleep(0.3)
            allLedBarGraph()
            time.sleep(0.3)

    def destroy():
        for pin in ledPins:
            GPIO.output(pin, GPIO.HIGH)    # turn off all leds
        GPIO.cleanup()                     # Release resource

    if __name__ == '__main__':     # Program start from here
        setup()
        try:
            loop()
        except KeyboardInterrupt:  # When 'Ctrl+C' is pressed, the program destroy() will be  executed.
            destroy()

**Explicaci√≥n del c√≥digo**

ledPins = [11, 12, 13, 15, 16, 18, 22, 3, 5, 24]
Crear un array y asignarle el n√∫mero de pin correspondiente al gr√°fico de barras LED (11, 12, 13, 15, 16, 18, 22, 3, 5, 24) y el array se usar√° para controlar el LED.

.. code-block:: python

    def oddLedBarGraph():
        for i in range(5):
            j = i*2
            GPIO.output(ledPins[j],GPIO.LOW)
            time.sleep(0.3)
            GPIO.output(ledPins[j],GPIO.HIGH)

Hacer que los LEDs en las posiciones impares del gr√°fico de barras LED se enciendan en secuencia.

.. code-block:: python

    def evenLedBarGraph():
        for i in range(5):
            j = i*2+1
            GPIO.output(ledPins[j],GPIO.LOW)
            time.sleep(0.3)
            GPIO.output(ledPins[j],GPIO.HIGH)

Hacer que los LEDs en las posiciones pares del gr√°fico de barras LED se enciendan en secuencia.

.. code-block:: python

    def allLedBarGraph():
        for i in ledPins:
            GPIO.output(i,GPIO.LOW)
            time.sleep(0.3)
            GPIO.output(i,GPIO.HIGH)

Hacer que los LEDs en el gr√°fico de barras LED se enciendan uno por uno.

**Imagen del fen√≥meno**

.. image:: ../img/image67.jpeg
