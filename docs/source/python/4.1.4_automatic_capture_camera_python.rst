.. note::

    Hola, ¬°bienvenido a la comunidad de entusiastas de SunFounder Raspberry Pi, Arduino y ESP32 en Facebook! Sum√©rgete m√°s profundamente en Raspberry Pi, Arduino y ESP32 junto a otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte experto**: Resuelve problemas postventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprender y compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Avances exclusivos**: Accede anticipadamente a nuevos anuncios de productos y adelantos exclusivos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones navide√±as.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo.

.. _4.1.4_py:

4.1.4 C√°mara de Captura Autom√°tica
=======================================

Introducci√≥n
------------------

Cuando est√©s fuera, las peque√±as ardillas del bosque podr√≠an visitar tu alf√©izar. ¬°Vamos a hacer una c√°mara de captura autom√°tica para dejar fotos de estas peque√±as adorables!

Componentes Necesarios
---------------------------------

En este proyecto, necesitamos los siguientes componentes.

.. image:: ../img/3.1.18components.png
  :width: 800
  :align: center

Es muy conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_camera_module`
        - |link_camera_buy|
    *   - :ref:`cpn_pir`
        - \-


Diagrama Esquem√°tico
--------------------------

============== =============== ======== ===
Nombre T-Board cableado f√≠sico wiringPi BCM
GPIO17         Pin 11          0        17
============== =============== ======== ===

.. image:: ../img/1.1.18_schematic.png
   :width: 400
   :align: center

Procedimientos Experimentales
---------------------------------

Antes de este proyecto, debes asegurarte de haber completado :ref:`3.1.1_py`.

**Paso 1:** Construye el circuito.

.. image:: ../img/3.1.18fritzing.png
  :width: 800
  :align: center

**Paso 2:** Para conectar el m√≥dulo de la c√°mara y completar la configuraci√≥n, consulta: :ref:`cpn_camera_module`.

**Paso 3:** Ve al escritorio de Raspberry Pi. Puede que necesites una pantalla para una mejor experiencia, consulta: `Connect your Raspberry Pi <https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/3>`_. O accede al escritorio de Raspberry Pi de forma remota, para un tutorial detallado consulta :ref:`remote_desktop`.

**Paso 4:** Abre una terminal y accede a la carpeta del c√≥digo.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**Paso 5:** Ejecuta.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 4.1.4_AutomaticCaptureCamera.py

Despu√©s de que el c√≥digo se ejecute, el PIR detectar√° el entorno circundante, y si detecta que una ardilla pasa, la c√°mara tomar√° una foto.
El intervalo de las fotos es de 3 segundos, y el n√∫mero total de fotos tomadas se mostrar√° en la ventana de impresi√≥n.

Hay dos potenci√≥metros en el m√≥dulo PIR: uno es para ajustar la sensibilidad y el otro es para ajustar la distancia de detecci√≥n. Para que el m√≥dulo PIR funcione mejor, necesitas girar ambos en sentido antihorario hasta el final.

.. image:: ../img/PIR_TTE.png
    :width: 400
    :align: center

.. note::

   Tambi√©n puedes abrir ``4.1.4_AutomaticCaptureCamera.py`` en la ruta ``~/raphael-kit/python/`` con un IDE de Python, hacer clic en el bot√≥n Ejecutar para correrlo, y detener el c√≥digo con el bot√≥n Detener.


**C√≥digo**

.. note::
    Puedes **Modificar/Restablecer/Copiar/Ejecutar/Detener** el c√≥digo a continuaci√≥n. Pero antes de eso, necesitas ir a la ruta del c√≥digo fuente como ``raphael-kit/python``. Despu√©s de modificar el c√≥digo, puedes ejecutarlo directamente para ver el efecto.

.. raw:: html

    <run></run>

.. code-block:: python

   #!/usr/bin/env python3

   from picamera import PiCamera
   import RPi.GPIO as GPIO
   import time
   import os
   user = os.getlogin()
   user_home = os.path.expanduser(f'~{user}')


   camera = PiCamera()

   pirPin = 17    # the pir connect to pin17

   def setup():
      GPIO.setmode(GPIO.BCM)
      GPIO.setup(pirPin, GPIO.IN)
      camera.start_preview(alpha=200)

   def main():
      i = 1
      while True:
         pirVal = GPIO.input(pirPin)
         if pirVal==GPIO.HIGH:
               camera.capture(f'{user_home}/capture%s.jpg' % i)
               print('The number is %s' % i)
               time.sleep(3)
               i = i + 1

   def destroy():
      GPIO.cleanup()
      camera.stop_preview()

   if __name__ == '__main__':
      setup()
      try:
         main()
      except KeyboardInterrupt:
         destroy()

**Explicaci√≥n del C√≥digo**

.. code-block:: python

   pirVal = GPIO.input(pirPin)
   if pirVal==GPIO.HIGH:
         camera.capture(f'{user_home}/capture%s.jpg' % i)
         print('The number is %s' % i)
         time.sleep(3)
         i = i + 1

Cada vez que el m√≥dulo PIR detecta una ardilla, la Raspberry Pi tomar√° una foto y te dir√° a trav√©s de la ventana de impresi√≥n cu√°ntas fotos se han tomado. El intervalo entre cada foto es de 3 segundos.

Imagen del Fen√≥meno
--------------------------

.. image:: ../img/4.1.4spycamera.JPG
   :align: center
