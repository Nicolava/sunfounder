 
.. _2.1.9_py:

2.1.9 Joystick
==============

Introduction
--------------

Dans ce projet, nous allons apprendre comment fonctionne un joystick. Nous manipulons le joystick et affichons les résultats à l'écran.

Composants Nécessaires
------------------------

Pour ce projet, nous avons besoin des composants suivants :

.. image:: ../img/image317.png

Il est très pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ÉLÉMENTS DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez également les acheter séparément via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_joystick`
        - \-
    *   - :ref:`cpn_adc0834`
        - \-

Schéma Électrique
---------------------

Lors de la lecture des données du joystick, il y a quelques différences entre les axes : les 
données des axes X et Y sont analogiques, ce qui nécessite l'utilisation de l'ADC0834 pour 
convertir la valeur analogique en valeur numérique. Les données de l'axe Z sont numériques, 
vous pouvez donc utiliser directement le GPIO pour lire, ou vous pouvez également utiliser 
l'ADC pour lire.

.. image:: ../img/image319.png


.. image:: ../img/image320.png


Procédures Expérimentales
----------------------------

**Étape 1 :** Construire le circuit.

.. image:: ../img/image193.png

**Étape 2 :** Aller dans le dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**Étape 3 :** Exécuter.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 2.1.9_Joystick.py

Après l'exécution du code, tournez le joystick, puis les valeurs correspondantes de x, y, Btn seront 
affichées à l'écran.

**Code**

.. note::

    Vous pouvez **Modifier/Réinitialiser/Copier/Exécuter/Arrêter** le code ci-dessous. 
    Mais avant cela, vous devez accéder au chemin du code source comme ``raphael-kit/python``. 
    Après avoir modifié le code, vous pouvez l'exécuter directement pour voir l'effet.

.. raw:: html

    <run></run>

.. code-block:: python

    #!/usr/bin/env python3

    import RPi.GPIO as GPIO
    import ADC0834
    import time

    BtnPin = 22

    def setup():
        # Set the GPIO modes to BCM Numbering
        GPIO.setmode(GPIO.BCM)
        GPIO.setup(BtnPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)
        ADC0834.setup()

    def destroy():
        # Release resource
        GPIO.cleanup()

    def loop():
        while True:
            x_val = ADC0834.getResult(0)
            y_val = ADC0834.getResult(1)
            Btn_val = GPIO.input(BtnPin)
            print ('X: %d  Y: %d  Btn: %d' % (x_val, y_val, Btn_val))
            time.sleep(0.2)

    if __name__ == '__main__':
        setup()
        try:
            loop()
        except KeyboardInterrupt: # When 'Ctrl+C' is pressed, the program destroy() will be executed.
            destroy()

**Explication du Code**

.. code-block:: python

    def loop():
        while True:
            x_val = ADC0834.getResult(0)
            y_val = ADC0834.getResult(1)
            Btn_val = GPIO.input(BtnPin)
            print ('X: %d  Y: %d  Btn: %d' % (x_val, y_val, Btn_val))
            time.sleep(0.2)

Les broches VRX et VRY du joystick sont respectivement connectées aux CH0 et CH1 de l'ADC0834. 
La fonction getResult() est donc appelée pour lire les valeurs de CH0 et CH1. Les valeurs lues 
doivent ensuite être stockées dans les variables x_val et y_val. En outre, la valeur de SW du 
joystick est lue et stockée dans la variable Btn_val. Enfin, les valeurs de x_val, y_val et Btn_val 
sont affichées à l'aide de la fonction print().

Image du Phénomène
------------------

.. image:: ../img/image194.jpeg


