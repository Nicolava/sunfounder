.. _2.1.9_py:

2.1.9 ジョイスティック
======================

はじめに
------------

このプロジェクトでは、ジョイスティックの動作原理について学びます。ジョイスティックを操作して、その結果を画面に表示します。

必要な部品
------------------------------

このプロジェクトで必要な部品は以下のとおりです。

.. image:: ../img/image317.png

一式をまとめて購入すると便利です。リンクはこちら：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前
        - このキットのアイテム
        - リンク
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

以下のリンクから個別にも購入できます。

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - コンポーネントの紹介
        - 購入リンク
    *   - :ref:`GPIO拡張ボード`
        - |link_gpio_board_buy|
    *   - :ref:`ブレッドボード`
        - |link_breadboard_buy|
    *   - :ref:`ジャンパーワイヤー`
        - |link_wires_buy|
    *   - :ref:`抵抗器`
        - |link_resistor_buy|
    *   - :ref:`ジョイスティックモジュール`
        - \-
    *   - :ref:`ADC0834`
        - \-

回路図
-----------------

ジョイスティックのデータを読む際、X軸とY軸のデータはアナログであり、ADC0834を使ってアナログ値をデジタル値に変換する必要があります。Z軸のデータはデジタルなので、GPIOを直接使用して読むことができますし、ADCで読むことも可能です。

.. image:: ../img/image319.png

.. image:: ../img/image320.png

実験手順
-----------------------

**ステップ1:** 回路を組む。

.. image:: ../img/image193.png

**ステップ2:** コードのフォルダに移動する。

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**ステップ3:** 実行する。

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 2.1.9_Joystick.py

コードが実行された後、ジョイスティックを動かして、対応するx、y、Btnの値が画面に表示されます。

**コード**

.. note::

    以下のコードを **修正/リセット/コピー/実行/停止** できますが、それを行う前に、ソースコードのパス、例えば ``raphael-kit/python`` に移動する必要があります。コードを修正した後、そのまま実行して効果を確認できます。

.. raw:: html

    <run></run>

.. code-block:: python

    #!/usr/bin/env python3

    import RPi.GPIO as GPIO
    import ADC0834
    import time

    BtnPin = 22

    def setup():
        # Set the GPIO modes to BCM Numbering
        GPIO.setmode(GPIO.BCM)
        GPIO.setup(BtnPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)
        ADC0834.setup()

    def destroy():
        # Release resource
        GPIO.cleanup()

    def loop():
        while True:
            x_val = ADC0834.getResult(0)
            y_val = ADC0834.getResult(1)
            Btn_val = GPIO.input(BtnPin)
            print ('X: %d  Y: %d  Btn: %d' % (x_val, y_val, Btn_val))
            time.sleep(0.2)

    if __name__ == '__main__':
        setup()
        try:
            loop()
        except KeyboardInterrupt: # When 'Ctrl+C' is pressed, the program destroy() will be executed.
            destroy()

**コード説明**

.. code-block:: python

    def loop():
        while True:
            x_val = ADC0834.getResult(0)
            y_val = ADC0834.getResult(1)
            Btn_val = GPIO.input(BtnPin)
            print ('X: %d  Y: %d  Btn: %d' % (x_val, y_val, Btn_val))
            time.sleep(0.2)

ジョイスティックのVRXとVRYは、それぞれADC0834のCH0とCH1に接続されています。したがって、関数getResult()を呼び出してCH0とCH1の値を読み取ります。次に、読み取った値を変数x_valとy_valに格納します。さらに、ジョイスティックのSWの値を読み取って変数Btn_valに格納します。最後に、x_val、y_val、Btn_valの値をprint()関数で出力します。

現象の画像
------------------

.. image:: ../img/image194.jpeg


