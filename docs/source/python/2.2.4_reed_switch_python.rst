.. _2.2.4_py:

2.2.4 Reed-Schalter-Modul
============================

Einführung
----------

In diesem Projekt werden wir den Reed-Schalter kennenlernen, ein elektrischer Schalter, der mithilfe eines angelegten Magnetfelds funktioniert.

.. image:: ../img/2.2.4reed_switch.png
    :width: 300
    :align: center

Benötigte Komponenten
---------------------

Für dieses Projekt benötigen wir folgende Komponenten.

.. image:: ../img/2.2.4component.png
    :width: 700
    :align: center

Es ist sicherlich bequem, ein ganzes Set zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie können sie auch einzeln über die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_reed_switch`
        - |link_reed_switch_buy|

Schaltplan
---------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
============ ======== ======== ===

.. image:: ../img/reed_schematic.png
    :width: 400
    :align: center

.. image:: ../img/reed_schematic2.png
    :width: 400
    :align: center

Experimentelle Verfahren
----------------------------

**Schritt 1:** Schalten Sie den Stromkreis.

.. image:: ../img/2.2.4fritzing.png
    :width: 700
    :align: center

**Schritt 2:** Wechseln Sie das Verzeichnis.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**Schritt 3:** Starten.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 2.2.4_ReedSwitch.py

Die grüne LED leuchtet beim Ausführen des Codes. Wenn ein Magnet in die Nähe des Reed-Schalter-Moduls gebracht wird, leuchtet die rote LED auf; entfernen Sie den Magneten und die grüne LED leuchtet erneut auf.

**Code**

.. note::

    Sie können den untenstehenden Code **Ändern/Zurücksetzen/Kopieren/Ausführen/Stoppen**. Aber davor müssen Sie zum Quellcode-Pfad wie ``raphael-kit/python`` navigieren. Nach dem Ändern des Codes können Sie ihn direkt ausführen, um den Effekt zu sehen.


.. raw:: html

    <run></run>

.. code-block:: python

    #!/usr/bin/env python3
    import RPi.GPIO as GPIO
    import time

    ReedPin = 17
    Gpin    = 27
    Rpin    = 22

    def setup():
        GPIO.setmode(GPIO.BCM)       # 
        GPIO.setup(Gpin, GPIO.OUT)     # Set Green Led Pin mode to output
        GPIO.setup(Rpin, GPIO.OUT)     # Set Red Led Pin mode to output
        GPIO.setup(ReedPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)    # Set ReedPin's mode is input, and pull up to high level(3.3V)
        GPIO.add_event_detect(ReedPin, GPIO.BOTH, callback=detect, bouncetime=200)

    def Led(x):
        if x == 0:
            GPIO.output(Rpin, 1)
            GPIO.output(Gpin, 0)
        if x == 1:
            GPIO.output(Rpin, 0)
            GPIO.output(Gpin, 1)

    def detect(self):
        Led(GPIO.input(ReedPin))

    def loop():
        while True:
            pass

    def destroy():
        GPIO.output(Gpin, GPIO.HIGH)       # Green led on
        GPIO.output(Rpin, GPIO.LOW)       # Red led off
        GPIO.cleanup()                     # Release resource

    if __name__ == '__main__':     # Program start from here
        setup()
        detect()
        try:
            loop()
        except KeyboardInterrupt:  # When 'Ctrl+C' is pressed, the child program destroy() will be  executed.
            destroy()

**Code-Erklärung**

.. code-block:: python

    ReedPin = 17
    Gpin    = 27
    Rpin    = 22

    def setup():
        GPIO.setmode(GPIO.BCM)       # 
        GPIO.setup(Gpin, GPIO.OUT)     # Set Green Led Pin mode to output
        GPIO.setup(Rpin, GPIO.OUT)     # Set Red Led Pin mode to output
        GPIO.setup(ReedPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)    # Set ReedPin's mode is input, and pull up to high level(3.3V)
        GPIO.add_event_detect(ReedPin, GPIO.BOTH, callback=detect, bouncetime=200)

Die GPIO-Modi werden auf BCM-Nummerierung eingestellt. ``ReedPin``, ``Gpin`` und ``Rpin`` verbinden mit den GPIO17, GPIO27 und GPIO22.

``GPIO.add_event_detect()`` wird verwendet, um ein Ereignis hinzuzufügen, das durch eine Änderung des Wertes (Niveau) von ``ReedPin`` ausgelöst wird, woraufhin die Callback-Funktion ``detect()`` aufgerufen wird.

.. code-block:: python

    def Led(x):
        if x == 0:
            GPIO.output(Rpin, 1)
            GPIO.output(Gpin, 0)
        if x == 1:
            GPIO.output(Rpin, 0)
            GPIO.output(Gpin, 1)

Definiere eine Funktion ``Led()``, um die beiden LEDs ein- oder auszuschalten. Wenn ``x=0``, leuchtet die rote LED; ansonsten wird die grüne LED leuchten.

.. code-block:: python

    def detect(self):
    Led(GPIO.input(ReedPin))

In dieser Callback-Funktion wird der Wert des Reed-Schalters verwendet, um die 2 LEDs zu steuern.

 
Phänomen-Bild
-------------

.. image:: ../img/2.2.4reed_switch.JPG
    :width: 500
    :align: center