.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _2.1.4_py:

2.1.4 スライドスイッチ
========================

はじめに
------------

このプロジェクトでは、スライドスイッチの使い方を学びます。通常、スライドスイッチは電源スイッチとしてPCBにはんだ付けされますが、今回はブレッドボードに挿入するため、固定されない可能性があります。ブレッドボード上でその機能を示すために使用します。

必要な部品
------------------------------

このプロジェクトには、以下のコンポーネントが必要です。

.. image:: ../img/list_2.1.2_slide_switch.png

一式をまとめて購入すると便利です。リンクはこちら：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前
        - このキットのアイテム
        - リンク
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

個々に購入することもできます。以下のリンクからどうぞ。

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - コンポーネントの紹介
        - 購入リンク

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_slide_switch`
        - |link_slide_switch_buy|
    *   - :ref:`cpn_capacitor`
        - |link_capacitor_buy|

回路図
-----------------

スライドスイッチの中央のピンをGPIO17に接続し、2つのLEDをそれぞれGPIO22とGPIO27に接続します。その後、スライドを引くと、2つのLEDが交互に点灯します。

.. image:: ../img/image305.png

.. image:: ../img/image306.png

実験手順
-----------------------

**ステップ1：** 回路を組み立てる。

.. image:: ../img/image161.png

**ステップ2：** コードのフォルダに移動。

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python

**ステップ3：** 実行。

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 2.1.4_Slider.py

コードが実行されている間、スイッチを左に繋ぐと黄色のLEDが点灯します。右に繋ぐと、赤い光が点灯します。

**コード**

.. note::

    以下のコードは **編集/リセット/コピー/実行/停止** が可能です。しかし、事前にソースコードのパス、例えば ``raphael-kit/python`` に移動する必要があります。コードを変更した後、そのまま実行して効果を確認できます。

.. raw:: html

    <run></run>



.. code-block:: python

    import RPi.GPIO as GPIO
    import time

    # Set GPIO17 as slide switch pin, GPIO22 as led1 pin, GPIO27 as led2 pin
    slidePin = 17
    led1Pin = 22
    led2Pin = 27

    # Define a setup function for some setup
    def setup():
        # Set the GPIO modes to BCM Numbering
        GPIO.setmode(GPIO.BCM)
        # Set slidePin input
        # Set ledPin output,
        # and initial level to High(3.3v)
        GPIO.setup(slidePin, GPIO.IN)
        GPIO.setup(led1Pin, GPIO.OUT, initial=GPIO.HIGH)
        GPIO.setup(led2Pin, GPIO.OUT, initial=GPIO.HIGH)

    # Define a main function for main process
    def main():
        while True:
            # slide switch high, led1 on
            if GPIO.input(slidePin) == 1:
                print ('    LED1 ON    ')
                GPIO.output(led1Pin, GPIO.LOW)
                GPIO.output(led2Pin, GPIO.HIGH)

            # slide switch low, led2 on
            if GPIO.input(slidePin) == 0:
                print ('    LED2 ON    ')
                GPIO.output(led2Pin, GPIO.LOW)
                GPIO.output(led1Pin, GPIO.HIGH)

            time.sleep(0.5)
    # Define a destroy function for clean up everything after
    # the script finished
    def destroy():
        # Turn off LED
        GPIO.output(led1Pin, GPIO.HIGH)
        GPIO.output(led2Pin, GPIO.HIGH)
        # Release resource
        GPIO.cleanup()                    

    # If run this script directly, do:
    if __name__ == '__main__':
        setup()
        try:
            main()
        # When 'Ctrl+C' is pressed, the program
        # destroy() will be  executed.
        except KeyboardInterrupt:
            destroy()   

**コード説明**

.. code-block:: python

    if GPIO.input(slidePin) == 1:
                GPIO.output(led1Pin, GPIO.LOW)
                GPIO.output(led2Pin, GPIO.HIGH)

スライドが右に引かれると、中央のピンと右側のピンが接続されます。このため、Raspberry Piは中央のピンでhighレベルを読み取り、LED1は点灯し、LED2は消灯します。

.. code-block:: python

    if GPIO.input(slidePin) == 0:
                GPIO.output(led2Pin, GPIO.LOW)
                GPIO.output(led1Pin, GPIO.HIGH)

スライドが左に引かれると、中央のピンと左側のピンが接続されます。このため、Raspberry Piはlowレベルを読み取り、LED2は点灯し、LED1は消灯します。

現象の画像
------------------

.. image:: ../img/image162.jpeg


