.. note::

    Hola, ¬°bienvenido a la Comunidad de Entusiastas de SunFounder Raspberry Pi & Arduino & ESP32 en Facebook! Sum√©rgete m√°s en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte experto**: Resuelve problemas post-venta y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Avances exclusivos**: Obt√©n acceso anticipado a anuncios de nuevos productos y adelantos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones festivas.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo.

.. _1.1.7_py:

1.1.7 I2C LCD1602
=======================

Introducci√≥n
--------------------

LCD1602 es una pantalla de cristal l√≠quido tipo car√°cter, que puede mostrar 32
(16*2) caracteres al mismo tiempo.

Componentes requeridos
-------------------------------

En este proyecto, necesitamos los siguientes componentes.

.. image:: ../img/list_i2c_lcd.png

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ART√çCULOS EN ESTE KIT
        - ENLACE
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_i2c_lcd`
        - |link_i2clcd1602_buy|

Diagrama esquem√°tico
--------------------------

================= ========
Nombre de T-Board physical
SDA1              Pin 3
SCL1              Pin 5
================= ========

.. image:: ../img/schematic_i2c_lcd.png


Procedimientos Experimentales
--------------------------------

**Paso 1:** Construir el circuito.

.. image:: ../img/image96.png


**Paso 2**: Configurar I2C (ver :ref:`i2c_config`. Si ya has configurado I2C, omite este paso).

**Paso 3:** Cambiar de directorio.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**Paso 4:** Ejecutar.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 1.1.7_Lcd1602.py

Despu√©s de ejecutar el c√≥digo, podr√°s ver ``Greetings!, From SunFounder`` en la pantalla LCD.

.. note::

    * Si obtienes el error ``FileNotFoundError: [Errno 2] No such file or directory: '/dev/i2c-1'``, necesitas referirte a :ref:`i2c_config` para habilitar el I2C.
    * Si obtienes el error ``ModuleNotFoundError: No module named 'smbus2'``, por favor ejecuta ``sudo pip3 install smbus2``.
    * Si aparece el error ``OSError: [Errno 121] Remote I/O error``, significa que el m√≥dulo est√° mal cableado o est√° da√±ado.
    * Si el c√≥digo y el cableado est√°n bien, pero la pantalla LCD a√∫n no muestra contenido, puedes girar el potenci√≥metro en la parte posterior para aumentar el contraste.



**C√≥digo** 

.. note::

    Puedes **Modificar/Restablecer/Copiar/Ejecutar/Detener** el c√≥digo a continuaci√≥n. Pero antes de eso, necesitas ir a la ruta del c√≥digo fuente como ``raphael-kit/python``. Despu√©s de modificar el c√≥digo, puedes ejecutarlo directamente para ver el efecto.


.. raw:: html

    <run></run>

.. code-block:: python

    import LCD1602
    import time

    def setup():
        LCD1602.init(0x27, 1)   # init(slave address, background light)
        LCD1602.write(0, 0, 'Greetings!')
        LCD1602.write(1, 1, 'From SunFounder')
        time.sleep(2)

    def destroy():
        LCD1602.clear()

    if __name__ == "__main__":
        try:
            setup()
        except KeyboardInterrupt:
            destroy()



**Explicaci√≥n del C√≥digo**

.. code-block:: python

    import LCD1602

Este archivo es un archivo de c√≥digo abierto para controlar el I2C LCD1602. Nos permite usar f√°cilmente el I2C LCD1602.

.. code-block:: python

    LCD1602.init(0x27, 1) 

La funci√≥n inicializa el sistema I2C con el s√≠mbolo de dispositivo designado. El primer par√°metro es la direcci√≥n del dispositivo I2C, que puede ser detectada mediante el comando i2cdetect (ver el Ap√©ndice para m√°s detalles). La direcci√≥n del I2C LCD1602 es generalmente 0x27.

.. code-block:: python

    LCD1602.write(0, 0, 'Greetings!')

Dentro de esta funci√≥n, 'Greetings!! ' es el car√°cter que se imprimir√° en la Fila 0+1, columna 0+1 del LCD. 
Ahora puedes ver "Greetings!! From SunFounder" en la pantalla LCD.

Foto del Fen√≥meno
--------------------------

.. image:: ../img/image97.jpeg
