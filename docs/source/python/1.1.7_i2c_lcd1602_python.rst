 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _1.1.7_py:

1.1.7 I2C LCD1602
======================

Introduction
------------------

Le LCD1602 est un afficheur √† cristaux liquides de type caract√®re, capable d'afficher simultan√©ment 32 caract√®res (16*2).

Composants N√©cessaires
------------------------------

Pour ce projet, nous aurons besoin des composants suivants.

.. image:: ../img/list_i2c_lcd.png

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_i2c_lcd`
        - |link_i2clcd1602_buy|

Sch√©ma de C√¢blage
---------------------

============ ========
Nom T-Board  physique
SDA1         Pin 3
SCL1         Pin 5
============ ========

.. image:: ../img/schematic_i2c_lcd.png

Proc√©dures Exp√©rimentales
-----------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: ../img/image96.png

**√âtape 2 :** Configurez l'I2C (voir :ref:`i2c_config`. Si vous avez d√©j√† configur√© l'I2C, passez cette √©tape.)

**√âtape 3 :** Changez de r√©pertoire.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**√âtape 4 :** Ex√©cutez.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 1.1.7_Lcd1602.py

Apr√®s l'ex√©cution du code, vous pouvez voir ``Greetings!, From SunFounder`` affich√© sur le LCD.

.. note::

    * Si vous obtenez l'erreur ``FileNotFoundError: [Errno 2] No such file or directory: '/dev/i2c-1'``, vous devez vous r√©f√©rer √† :ref:`i2c_config` pour activer l'I2C.
    * Si vous obtenez l'erreur ``ModuleNotFoundError: No module named 'smbus2'``, veuillez ex√©cuter ``sudo pip3 install smbus2``.
    * Si l'erreur ``OSError: [Errno 121] Remote I/O error`` appara√Æt, cela signifie que le module est mal c√¢bl√© ou que le module est d√©fectueux.
    * Si le code et le c√¢blage sont corrects, mais que le LCD ne s'affiche toujours pas, vous pouvez tourner le potentiom√®tre √† l'arri√®re pour augmenter le contraste.

**Code** 

.. note::

    Vous pouvez **Modifier/R√©initialiser/Copier/Ex√©cuter/Arr√™ter** le code ci-dessous. Mais avant cela, vous devez vous rendre dans le chemin du code source comme ``raphael-kit/python``. Apr√®s avoir modifi√© le code, vous pouvez l'ex√©cuter directement pour voir l'effet.


.. raw:: html

    <run></run>

.. code-block:: python

    import LCD1602
    import time

    def setup():
        LCD1602.init(0x27, 1)   # init(slave address, background light)
        LCD1602.write(0, 0, 'Greetings!')
        LCD1602.write(1, 1, 'From SunFounder')
        time.sleep(2)

    def destroy():
        LCD1602.clear()

    if __name__ == "__main__":
        try:
            setup()
        except KeyboardInterrupt:
            destroy()



**Explication du code**

.. code-block:: python

    import LCD1602

Ce fichier est un fichier open source pour contr√¥ler l'I2C LCD1602. Il nous permet d'utiliser facilement l'I2C LCD1602.

.. code-block:: python

    LCD1602.init(0x27, 1) 

Cette fonction initialise le syst√®me I2C avec le symbole de l'appareil d√©sign√©. Le premier param√®tre est l'adresse de l'appareil I2C, qui peut √™tre d√©tect√©e gr√¢ce √† la commande i2cdetect (voir l'Annexe pour plus de d√©tails). L'adresse de l'I2C LCD1602 est g√©n√©ralement 0x27.

.. code-block:: python

    LCD1602.write(0, 0, 'Greetings!')

Dans cette fonction, 'Greetings!' est le texte √† imprimer sur la ligne 0+1, colonne 0+1 du LCD. 
Vous pouvez maintenant voir ‚ÄúGreetings! From SunFounder‚Äù affich√© sur le LCD.

Image du ph√©nom√®ne
--------------------------

.. image:: ../img/image97.jpeg
