.. nota::

    Ciao, benvenuto nella Community di appassionati di SunFounder Raspberry Pi & Arduino & ESP32 su Facebook! Approfondisci Raspberry Pi, Arduino ed ESP32 insieme agli altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto esperto**: Risolvi problemi post-vendita e sfide tecniche con l'aiuto della nostra community e del nostro team.
    - **Impara e condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato a nuovi annunci di prodotti e anteprime.
    - **Sconti speciali**: Godi di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e omaggi**: Partecipa a omaggi e promozioni speciali per le festivit√†.

    üëâ Sei pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _3.1.2_c:

3.1.2 Benvenuto
=================================

Introduzione
----------------

In questo progetto, utilizzeremo il PIR per rilevare il movimento dei pedoni
e utilizzeremo servocomandi, LED e un cicalino per simulare il funzionamento 
della porta automatica di un minimarket. Quando il pedone entra nel raggio di 
rilevamento del PIR, la spia si accender√†, la porta si aprir√† e il cicalino 
suoner√† un campanello di apertura.

Componenti necessari
------------------------------

In questo progetto avremo bisogno dei seguenti componenti. 

.. image:: ../img/list_Welcome.png
    :align: center

√à sicuramente conveniente acquistare un kit completo, ecco il link: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Puoi anche acquistare i componenti separatamente dai link qui sotto.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE COMPONENTI
        - LINK DI ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_pir`
        - \-
    *   - :ref:`cpn_servo`
        - |link_servo_buy|
    *   - :ref:`cpn_buzzer`
        - |link_passive_buzzer_buy|
    *   - :ref:`cpn_transistor`
        - |link_transistor_buy|

Schema elettrico
-------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO18       Pin 12   1        18
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
============ ======== ======== ===

.. image:: ../img/Schematic_three_one2.png
   :align: center

Procedura sperimentale
--------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/image239.png
    :align: center

**Passo 2:** Cambia directory.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/c/3.1.2/

**Passo 3:** Compila.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.2_Welcome.c -lwiringPi

**Passo 4:** Esegui.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./a.out

Dopo l'esecuzione del codice, se il sensore PIR rileva qualcuno che passa,
la porta si aprir√† automaticamente (simulata dal servo), si accender√†
la spia e verr√† riprodotta la musica del campanello. Dopo che la musica sar√† terminata,
il sistema chiuder√† automaticamente la porta e spegner√† la spia,
aspettando il passaggio del prossimo pedone.

Sul modulo PIR ci sono due potenziometri: uno regola la sensibilit√† e l'altro la distanza di rilevamento. Per far funzionare meglio il modulo PIR, devi ruotarli entrambi completamente in senso antiorario.

.. image:: ../img/PIR_TTE.png
    :width: 400
    :align: center

.. note::

    Se non funziona dopo l'esecuzione o compare un messaggio di errore: \"wiringPi.h: Nessun file o directory\", fai riferimento a :ref:`install_wiringpi`.

**Spiegazione del codice**

.. code-block:: c

    void setAngle(int pin, int angle){    //Crea una funzione per controllare l'angolo del servo.
        if(angle < 0)
            angle = 0;
        if(angle > 180)
            angle = 180;
        softPwmWrite(pin,Map(angle, 0, 180, 5, 25));   
    } 

Crea una funzione, setAngle, per impostare l'angolo nel servo da 0 a 180 gradi.

.. code-block:: c

    void doorbell(){
    for(int i=0;i<sizeof(song)/4;i++){
            softToneWrite(BuzPin, song[i]); 
            delay(beat[i] * 250);
        }

Crea una funzione, doorbell, per abilitare il cicalino a suonare la musica.

.. code-block:: c

    void closedoor(){
    digitalWrite(ledPin, LOW);   //led spento
    for(int i=180;i>-1;i--){  //fai ruotare il servo dall'angolo massimo all'angolo minimo
        setAngle(servoPin,i);
        delay(1);
        }
    }

Crea una funzione closedoor per simulare la chiusura della porta, spegnere il
LED e far ruotare il servo da 180 gradi a 0 gradi.

.. code-block:: c

    void opendoor(){
        digitalWrite(ledPin, HIGH);   //led acceso
        for(int i=0;i<181;i++){  //fai ruotare il servo dall'angolo minimo all'angolo massimo
            setAngle(servoPin,i);
            delay(1);
        }
        doorbell();
        closedoor();
    }

La funzione opendoor() include diverse parti: accendere la spia,
ruotare il servo (simulando l'azione di apertura della porta), suonare
la musica del campanello del minimarket e, dopo la musica, chiamare la funzione
closedoor().

.. code-block:: c

        int main(void)
    {
        if(wiringPiSetup() == -1){ //se l'inizializzazione di wiring fallisce, stampa il messaggio a schermo
            printf("setup wiringPi failed !");
            return 1;
        }
        if(softToneCreate(BuzPin) == -1){
            printf("setup softTone failed !");
            return 1;
    ......

Nella funzione main(), inizializza la libreria wiringPi e configura softTone,
quindi imposta ledPin come uscita e pirPin come ingresso. Se il sensore PIR
rileva qualcuno che passa, verr√† chiamata la funzione opendoor
per simulare l'apertura della porta.

Immagine del Fenomeno
-------------------------

.. image:: ../img/image240.jpeg
   :align: center