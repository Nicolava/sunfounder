 
.. note::

    Bonjour et bienvenue dans la CommunautÃ© Facebook des passionnÃ©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profondÃ©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionnÃ©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : RÃ©solvez les problÃ¨mes aprÃ¨s-vente et les dÃ©fis techniques avec l'aide de notre communautÃ© et de notre Ã©quipe.
    - **Apprendre et partager** : Ã‰changez des astuces et des tutoriels pour amÃ©liorer vos compÃ©tences.
    - **AperÃ§us exclusifs** : AccÃ©dez en avant-premiÃ¨re aux annonces de nouveaux produits et aux aperÃ§us.
    - **RÃ©ductions spÃ©ciales** : Profitez de rÃ©ductions exclusives sur nos produits les plus rÃ©cents.
    - **Promotions festives et cadeaux** : Participez Ã  des cadeaux et des promotions de vacances.

    ğŸ‘‰ PrÃªt Ã  explorer et Ã  crÃ©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _3.1.1_c:

3.1.1 Compteur
============================

Introduction
-----------------

Ici, nous allons crÃ©er un systÃ¨me de comptage avec affichage numÃ©rique, composÃ© d'un capteur
 PIR et d'un afficheur Ã  segments 4 chiffres. Lorsque le capteur PIR dÃ©tecte le passage de 
 quelqu'un, le chiffre sur l'afficheur Ã  segments 4 chiffres augmentera de 1. Vous pouvez 
 utiliser ce compteur pour compter le nombre de personnes traversant un passage.

Composants requis
------------------------------

Pour ce projet, nous avons besoin des composants suivants.

.. image:: ../img/list_Counting_Device1.png
    :align: center

.. image:: ../img/list_Counting_Device2.png
    :align: center

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - Ã‰LÃ‰MENTS DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez Ã©galement les acheter sÃ©parÃ©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_4_digit`
        - \-
    *   - :ref:`cpn_74hc595`
        - |link_74hc595_buy|
    *   - :ref:`cpn_pir`
        - \-

SchÃ©ma
----------------------

============ ======== ======== ===
Nom T-Board  Physique wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
SPIMOSI      Pin 19   12       10
GPIO18       Pin 12   1        18
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO26       Pin 37   25       26
============ ======== ======== ===

.. image:: ../img/Schematic_three_one1.png
   :align: center

ProcÃ©dures expÃ©rimentales
-----------------------------

**Ã‰tape 1** : Construisez le circuit.

.. image:: ../img/image235.png
**Ã‰tape 2** : Allez dans le dossier du code.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/c/3.1.1/

**Ã‰tape 3** : Compilez le code.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.1_CountingDevice.c -lwiringPi

**Ã‰tape 4** : ExÃ©cutez le fichier exÃ©cutable.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./a.out

AprÃ¨s l'exÃ©cution du code, lorsque le capteur PIR dÃ©tecte le passage de quelqu'un, le nombre sur l'afficheur Ã  segments 4 chiffres augmentera de 1.

Il y a deux potentiomÃ¨tres sur le module PIR : l'un pour ajuster la sensibilitÃ© et l'autre pour ajuster la distance de dÃ©tection. Pour que le module PIR fonctionne mieux, vous devez les tourner tous les deux dans le sens antihoraire jusqu'Ã  la fin.

.. image:: ../img/PIR_TTE.png
    :width: 400
    :align: center

.. note::

    Si cela ne fonctionne pas aprÃ¨s l'exÃ©cution, ou s'il y a un message d'erreur : "wiringPi.h : Aucun fichier ou rÃ©pertoire de ce type", veuillez vous rÃ©fÃ©rer Ã  :ref:`install_wiringpi`.

**Explication du code**

.. code-block:: c

    voidÂ display()
    {
        clearDisplay();
        pickDigit(0);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10]);

        clearDisplay();
        pickDigit(1);
    Â Â Â Â hc595_shift(number[counterÂ %Â 100Â /Â 10]);

        clearDisplay();
        pickDigit(2);
    Â Â Â Â hc595_shift(number[counterÂ %Â 1000Â /Â 100]);
     
        clearDisplay();
        pickDigit(3);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10000Â /Â 1000]);
    }

Tout d'abord, commencez par l'afficheur du quatriÃ¨me segment, Ã©crivez le chiffre des 
unitÃ©s. Ensuite, commencez par l'afficheur du troisiÃ¨me segment et saisissez le chiffre 
des dizaines ; aprÃ¨s cela, commencez respectivement par les afficheurs du deuxiÃ¨me et du 
premier segment et saisissez les chiffres des centaines et des milliers respectivement. 
GrÃ¢ce Ã  la vitesse de rafraÃ®chissement trÃ¨s rapide, nous voyons un affichage complet Ã  
quatre chiffres.

.. code-block:: c

    voidÂ loop(){
    Â Â Â Â intÂ currentStateÂ =0;
    Â Â Â Â intÂ lastState=0;
        while(1){
            display();
            currentState=digitalRead(sensorPin);
            if((currentState==0)&&(lastState==1)){
    Â Â Â Â Â Â Â Â Â Â Â Â counterÂ +=1;
            }
            lastState=currentState;
        }
    }

Il s'agit de la fonction principale : afficher le nombre sur l'afficheur Ã  segments 4 chiffres
et lire la valeur du capteur PIR. Lorsque le capteur PIR dÃ©tecte le passage de quelqu'un, le 
nombre sur l'afficheur Ã  segments 4 chiffres augmentera de 1.

Image du phÃ©nomÃ¨ne
-------------------------

.. image:: ../img/image236.jpeg
   :align: center
