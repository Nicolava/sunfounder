.. _1.1.7_c:

1.1.7 I2C LCD1602
=======================

Introduction
------------------

LCD1602 is a character type liquid crystal display, which can display 32
(16*2) characters at the same time.

Components
-------------------

.. image:: ../img/list_i2c_lcd.png

* :ref:`GPIO Extension Board`
* :ref:`Breadboard`
* :ref:`I2C LCD1602`

Schematic Diagram
---------------------

============ ========
T-Board Name physical
SDA1         Pin 3
SCL1         Pin 5
============ ========

.. image:: ../img/schematic_i2c_lcd.png


Experimental Procedures
-----------------------------

**Step 1:** Build the circuit.

.. image:: ../img/image96.png


**Step 2**: Setup I2C (see :ref:`I2C Configuration`. If you have set I2C, skip this step.)

**Step 3:** Change directory.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/1.1.7/

**Step 4:** Compile.

.. raw:: html

   <run></run>

.. code-block::

    gcc 1.1.7_Lcd1602.c -lwiringPi

**Step 5:** Run.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

After the code runs, you can see ``Greetings!, From SunFounder`` displaying on the LCD.

.. note::

    * If there is an error prompt ``wiringPi.h: No such file or directory``, please refer to :ref:`install_wiringpi`.
    * If you get ``Unable to open I2C device: No such file or directory`` error, you need to refer to :ref:`i2c_config` to enable I2C and check if the wiring is correct.
    * If the code and wiring are fine, but the LCD still does not display content, you can turn the potentiometer on the back to increase the contrast.

**Code**

* `1.1.7_Lcd1602.c <https://github.com/sunfounder/raphael-kit/blob/master/c/1.1.7/1.1.7_Lcd1602.c>`_

**Code Explanation**

.. code-block::

    void write_word(int data){……}
    void send_command(int comm){……}
    void send_data(int data){……}
    void init(){……}
    void clear(){……}
    void write(int x, int y, char data[]){……}

These functions are used to control I2C LCD1602 open source code. They allow us to easily use I2C LCD1602.
Among these functions, ``init()`` is used for initialization, ``clear()`` is used to clear the screen, ``write()`` is used to write what is displayed, and other functions support the above functions.

.. code-block:: c

    fd = wiringPiI2CSetup(LCDAddr);

This function initializes the I2C system with the specified device symbol. The prototype of the function:

.. code-block:: c

    int wiringPiI2CSetup(int devId);

Parameters devId is the address of the I2C device, it can be found through the i2cdetect command(see Appendix) and the devId of I2C LCD1602 is generally 0x27.

.. code-block:: c

    void write(int x, int y, char data[]){}

In this function, ``data[]`` is the character to be printed on the LCD, and the parameters x and y determine the printing position (line y+1, column x+1 is the starting position of the character to be printed).

Phenomenon Picture
--------------------------

.. image:: ../img/image97.jpeg
