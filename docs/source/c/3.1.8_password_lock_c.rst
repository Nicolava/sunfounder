 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _3.1.8_c:

3.1.8 Verrou √† Mot de Passe
========================================

Introduction
---------------

Dans ce projet, nous allons utiliser un clavier et un √©cran LCD pour cr√©er un verrou √† combinaison. Le LCD affichera une invite correspondante pour que vous puissiez taper votre mot de passe sur le clavier. Si le mot de passe est correctement saisi, ‚ÄúCorrect‚Äù sera affich√©.

Sur la base de ce projet, nous pouvons ajouter des composants √©lectroniques suppl√©mentaires, tels que buzzer, LED, etc., pour ajouter diff√©rents ph√©nom√®nes exp√©rimentaux lors de la saisie du mot de passe.

Composants n√©cessaires
------------------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../img/list_Password_Lock.png
    :align: center

Il est tr√®s pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DU COMPOSANT
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_i2c_lcd`
        - |link_i2clcd1602_buy|
    *   - :ref:`cpn_keypad`
        - \-

Sch√©ma de c√¢blage
------------------

============ ======== ======== ===
Nom T-Board  physique wiringPi BCM
GPIO18       Pin 12   1        18
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO25       Pin 22   6        25
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
SPIMOSI      Pin 19   12       10
SDA1         Pin 3             
SCL1         Pin 5             
============ ======== ======== ===

.. image:: ../img/Schematic_three_one9.png
   :align: center

Proc√©dures exp√©rimentales
-------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: ../img/image262.png

**√âtape 2 :** Changez de r√©pertoire.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/c/3.1.8/

**√âtape 3 :** Compilez.

.. raw:: html

   <run></run>

.. code-block::

    gcc 3.1.8_PasswordLock.cpp -lwiringPi

**√âtape 4 :** Ex√©cutez.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Apr√®s l'ex√©cution du code, utilisez le clavier pour entrer le mot de passe correct : 1984. 
Si ‚ÄúCORRECT‚Äù appara√Æt sur le LCD1602, le mot de passe est correct ; sinon, ‚ÄúWRONG KEY‚Äù appara√Ætra.

.. note::

    * Si un message d'erreur ``wiringPi.h: No such file or directory`` appara√Æt, veuillez vous r√©f√©rer √† :ref:`install_wiringpi`.
    * Si vous recevez l'erreur ``Unable to open I2C device: No such file or directory``, vous devez vous r√©f√©rer √† :ref:`i2c_config` pour activer I2C et v√©rifier si le c√¢blage est correct.
    * Si le code et le c√¢blage sont corrects mais que l'√©cran LCD n'affiche toujours rien, vous pouvez ajuster le potentiom√®tre √† l'arri√®re pour augmenter le contraste.

**Explication du code**

.. code-block:: c

    #define ROWS  4 
    #define COLS  4
    #define BUTTON_NUM (ROWS * COLS)
    #define LENS  4

    unsigned char KEYS[BUTTON_NUM] {  
    '1','2','3','A',
    '4','5','6','B',
    '7','8','9','C',
    '*','0','#','D'};

    char password[LENS]={'1','9','8','4'};

Ici, nous d√©finissons la longueur du mot de passe LENS, le tableau des valeurs des touches du 
clavier KEYS et le tableau qui stocke le mot de passe correct.

.. code-block:: c

    void keyRead(unsigned char* result);
    bool keyCompare(unsigned char* a, unsigned char* b);
    void keyCopy(unsigned char* a, unsigned char* b);
    void keyPrint(unsigned char* a);
    void keyClear(unsigned char* a);
    int keyIndexOf(const char value);

Voici une d√©claration des sous-fonctions du code du clavier matriciel, consultez :ref:`2.1.8_c` 
de ce document pour plus de d√©tails.

.. code-block:: c

    void write_word(int data);
    void send_command(int comm);
    void send_data(int data);
    void lcdInit();
    void clear();
    void write(int x, int y, char const data[]);

Voici une d√©claration des sous-fonctions du code LCD1062, consultez :ref:`1.1.7_c` de ce document pour plus de d√©tails.

.. code-block:: c

    while(1){
            keyRead(pressed_keys);
            bool comp = keyCompare(pressed_keys, last_key_pressed);
            ...
                    testword[keyIndex]=pressed_keys[0];
                    keyIndex++;
                    if(keyIndex==LENS){
                        if(check()==0){
                            clear();
                            write(3, 0, "WRONG KEY!");
                            write(0, 1, "please try again");
                            }
                    ...

Lisez la valeur de la touche et stockez-la dans le tableau testword. Si le nombre de valeurs 
de touches stock√©es est sup√©rieur √† 4, la correction du mot de passe est automatiquement v√©rifi√©e, 
et les r√©sultats de la v√©rification sont affich√©s sur l'√©cran LCD.

.. code-block:: c

    int check(){
        for(int i=0;i<LENS;i++){
            if(password[i]!=testword[i])
            {return 0;}
        }
        return 1;
    }


V√©rifiez la correction du mot de passe. Retourne 1 si le mot de passe est correctement saisi, 
et 0 sinon.

Image du ph√©nom√®ne
---------------------

.. image:: ../img/image263.jpeg
   :align: center