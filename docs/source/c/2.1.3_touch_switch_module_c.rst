.. _2.1.3_c:

2.1.3 Module Interrupteur Tactile
====================================

Introduction
-------------------

Dans ce projet, vous allez découvrir le module interrupteur tactile. 
Il peut remplacer les types d'interrupteurs traditionnels avec ces avantages : utilisation pratique, 
sensation tactile agréable, contrôle précis et usure mécanique minimale.

Composants Nécessaires
------------------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../img/2.1.3component.png
    :width: 700
    :align: center

Il est définitivement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ITEMS IN THIS KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Vous pouvez également les acheter séparément aux liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_touch_switch`
        - |link_touch_buy|

Schéma de Câblage
-----------------

.. image:: ../img/2.1.3circuit.png
    :width: 500
    :align: center

Procédures Expérimentales
------------------------------

**Étape 1 :** Construisez le circuit.

.. image:: ../img/2.1.3fritzing.png
    :width: 700
    :align: center

**Étape 2 :** Changez de répertoire.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/2.1.3/

**Étape 3 :** Compilez.

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.1.3_TouchSwitch.c -lwiringPi

**Étape 4 :** Exécutez.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Pendant l'exécution du code, la LED rouge s'allume ; lorsque vous appuyez sur le module interrupteur tactile, la LED jaune s'allume.

.. note::

    Si cela ne fonctionne pas après exécution, ou s'il y a un message d'erreur : \"wiringPi.h:  No such file or directory", veuillez consulter :ref:`install_wiringpi`.
**Code**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define touchPin		   0
    #define led1		   3
    #define led2 		   2

    int main(void)
    {
        // When initialize wiring failed, print message to screen
        if(wiringPiSetup() == -1){
            printf(etup w"siringPi failed !");
            return 1; 
        }
        
        pinMode(touchPin, INPUT);
        pinMode(led1, OUTPUT);
        pinMode(led2, OUTPUT);
        
        while(1){
            // touch switch high, led1 on
            if(digitalRead(touchPin) == 1){
                digitalWrite(led1, LOW);
                digitalWrite(led2, HIGH);
                printf("You touch it! \r\n");
            }
            // touch switch low, led2 on
            if(digitalRead(touchPin) == 0){
                digitalWrite(led2, LOW);
                digitalWrite(led1, HIGH);
            }
        }

        return 0;
    }

**Explication du Code**

.. code-block:: c

    #define touchPin		   0
    #define led1		   3
    #define led2 		   2
    
Les broches GPIO17, GPIO22 et GPIO27 de la carte T_Extension correspondent aux GPIO0, GPIO3 et GPIO2 dans wiringPi. Assignez GPIO0, GPIO3 et GPIO2 à ``touchPin``, ``led1`` et ``led2``. 

.. code-block:: c

    pinMode(touchPin, INPUT);
    pinMode(led1, OUTPUT);
    pinMode(led2, OUTPUT);

Définissez ``led1`` et ``led2`` comme sorties pour leur attribuer une valeur et définissez ``touchPin`` comme entrée pour lire sa valeur.

.. code-block:: c

    while(1){
        // touch switch high, led1 on
            if(digitalRead(touchPin) == 1){
            digitalWrite(led1, LOW);
            digitalWrite(led2, HIGH);
            printf("You touch it! \r\n");
        }
        // touch switch low, led2 on
        if(digitalRead(touchPin) == 0){
            digitalWrite(led2, LOW);
            digitalWrite(led1, HIGH);
        }
    }

Créez une boucle infinie : lorsque vous appuyez sur le module interrupteur tactile, ``touchPin`` passe à l'état haut, led1 s'allume et affiche "You touch it!". Lorsque ``touchPin`` est à l'état bas, led2 s'allume.

Photo du Phénomène
------------------------

.. image:: ../img/2.1.3touch_switch_module.JPG
    :width: 500
    :align: center