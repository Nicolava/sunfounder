 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _2.1.6_js:

2.1.6 Module Encodeur Rotatif
================================

Introduction
---------------

Dans ce projet, vous allez d√©couvrir l'encodeur rotatif. Un encodeur rotatif est un interrupteur 
√©lectronique produisant une s√©rie de pulses r√©guliers dans une s√©quence temporelle stricte. 
Lorsqu'il est utilis√© avec un CI, il peut effectuer des op√©rations d'incr√©mentation, 
de d√©cr√©mentation, de changement de page et d'autres op√©rations telles que le d√©filement 
de souris, la s√©lection de menu, etc.


Composants N√©cessaires
-----------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../img/Part_two_25.png

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DU COMPOSANT
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_rotary_encoder`
        - |link_rotary_encoder_buy|

Sch√©ma de C√¢blage
--------------------

.. image:: ../img/image349.png
   :align: center

Proc√©dures Exp√©rimentales
-----------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: ../img/2.1.6_fritzing.png
   :align: center

Dans cet exemple, nous pouvons connecter directement la broche de l'encodeur rotatif au 
Raspberry Pi en utilisant une breadboard et un c√¢ble √† 40 broches, connecter le GND de l'encodeur 
rotatif √† GND, ¬´ + ¬ª √† 5V, SW √† GPIO num√©rique 27, DT √† GPIO num√©rique 18, et CLK √† GPIO num√©rique 17.

**√âtape 2 :** Allez dans le dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**√âtape 3 :** Ex√©cutez le code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node rotary_encoder_module.js

Vous verrez le d√©compte dans le terminal. Lorsque vous tournez l'encodeur rotatif dans le sens 
horaire, le d√©compte augmente ; lorsque vous le tournez dans le sens antihoraire, le d√©compte 
diminue. Si vous appuyez sur l'interrupteur de l'encodeur rotatif, les lectures seront 
r√©initialis√©es √† z√©ro.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const clkPin = new Gpio(17, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,
      edge: Gpio.RISING_EDGE
    });
    const dtPin = new Gpio(18, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,    
    });
    const swPin = new Gpio(27, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_UP,
      edge: Gpio.FALLING_EDGE
    });

    var globalCounter = 0;

    clkPin.on('interrupt',()=>{
      if(dtPin.digitalRead()==1){
          globalCounter--;
      }
      else{
          globalCounter++;
      }
      console.log(`globalCounter = ${globalCounter}`);
    });

    swPin.on('interrupt', () => {
      globalCounter = 0;
      console.log(`globalCounter = ${globalCounter}`);
    });



**Explication du Code**

.. code-block:: js

    var globalCounter = 0;

    clkPin.on('interrupt',()=>{
      if(dtPin.digitalRead()==1){
          globalCounter--;
      }
      else{
          globalCounter++;
      }
      console.log(`globalCounter = ${globalCounter}`);
    });

Lorsque dtPin passe de bas √† haut, si clkPin est haut,
le compteur diminue,
sinon le compteur augmente.

.. code-block:: js

    swPin.on('interrupt', () => {
      globalCounter = 0;
      console.log(`globalCounter = ${globalCounter}`);
    });

swPin √©mettra un signal bas lorsque l'axe est press√©.
√Ä ce moment, globalCounter est r√©initialis√© √† z√©ro.


Image du ph√©nom√®ne
----------------------

.. image:: ../img/2.1.6rotary_ecoder.JPG
   :align: center
