.. note::

    ¬°Hola! Bienvenido a la Comunidad de Entusiastas de SunFounder Raspberry Pi & Arduino & ESP32 en Facebook. Profundiza en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte experto**: Resuelve problemas post-venta y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprender y compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Avances exclusivos**: Obt√©n acceso anticipado a nuevos anuncios de productos y vistas previas.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? ¬°Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo!

.. _2.1.6_js:

2.1.6 M√≥dulo de Codificador Rotativo
========================================

Introducci√≥n
------------------

En este proyecto, aprender√°s sobre el Codificador Rotativo. Un codificador 
rotativo es un interruptor electr√≥nico con un conjunto de pulsos regulares 
en una secuencia de tiempo estricta. Cuando se usa con IC, puede lograr incrementos, 
decrementos, cambio de p√°gina y otras operaciones como el desplazamiento del rat√≥n, 
selecci√≥n de men√∫s, entre otros.

Componentes necesarios
----------------------------

En este proyecto, necesitamos los siguientes componentes.

.. image:: ../img/Part_two_25.png

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre
        - ART√çCULOS EN ESTE KIT
        - ENLACE
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DE COMPONENTES
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_rotary_encoder`
        - |link_rotary_encoder_buy|

Esquema de diagrama
-------------------------

.. image:: ../img/image349.png
   :align: center

Procedimientos experimentales
---------------------------------

**Paso 1:** Construye el circuito.

.. image:: ../img/2.1.6_fritzing.png
   :align: center

En este ejemplo, podemos conectar el pin del Codificador Rotativo directamente al 
Raspberry Pi usando una placa de pruebas y un cable de 40 pines. Conecta el GND del 
Codificador Rotativo a GND, „Äå+„Äça 5V, SW al GPIO digital 27, DT al GPIO digital 18 
y CLK al GPIO digital 17.

**Paso 2:** Ve a la carpeta del c√≥digo.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Paso 3:** Ejecuta el c√≥digo.

.. raw:: html

   <run></run>

.. code-block::

    sudo node rotary_encoder_module.js

Ver√°s el conteo en la terminal. 
Cuando giras el codificador rotativo en el sentido de las agujas del reloj, el conteo aumenta; 
cuando lo giras en sentido contrario a las agujas del reloj, el conteo disminuye. 
Si presionas el interruptor del codificador rotativo, las lecturas volver√°n a cero.


**C√≥digo**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const clkPin = new Gpio(17, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,
      edge: Gpio.RISING_EDGE
    });
    const dtPin = new Gpio(18, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,    
    });
    const swPin = new Gpio(27, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_UP,
      edge: Gpio.FALLING_EDGE
    });

    var globalCounter = 0;

    clkPin.on('interrupt',()=>{
      if(dtPin.digitalRead()==1){
          globalCounter--;
      }
      else{
          globalCounter++;
      }
      console.log(`globalCounter = ${globalCounter}`);
    });

    swPin.on('interrupt', () => {
      globalCounter = 0;
      console.log(`globalCounter = ${globalCounter}`);
    });


**Explicaci√≥n del c√≥digo**

.. code-block:: js

    var globalCounter = 0;

    clkPin.on('interrupt',()=>{
      if(dtPin.digitalRead()==1){
          globalCounter--;
      }
      else{
          globalCounter++;
      }
      console.log(`globalCounter = ${globalCounter}`);
    });

Cuando dtPin pasa de bajo a alto, si clkPin est√° alto, 
el conteo disminuye, 
de lo contrario el conteo aumenta.


.. code-block:: js

    swPin.on('interrupt', () => {
      globalCounter = 0;
      console.log(`globalCounter = ${globalCounter}`);
    });

swPin dar√° salida a bajo cuando se presiona el eje. 
Deja que globalCounter llegue a cero en este punto.


Imagen del fen√≥meno
------------------------

.. image:: ../img/2.1.6rotary_ecoder.JPG
   :align: center
