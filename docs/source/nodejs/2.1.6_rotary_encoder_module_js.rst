.. _2.1.6_js:

2.1.6 Drehgeber Modul
=====================

Einführung
----------

In diesem Projekt werden Sie den Drehgeber kennenlernen. Ein Drehgeber ist
ein elektronischer Schalter mit einer Reihe von regelmäßigen Impulsen in strengem 
Zeitablauf. In Verbindung mit einem IC können Sie Erhöhen, Verringern, Seitenumbruch 
und andere Vorgänge wie Maus-Scrolling, Menüauswahl usw. realisieren.

Benötigte Komponenten
---------------------

Für dieses Projekt benötigen wir die folgenden Komponenten.

.. image:: ../img/Part_two_25.png

Es ist definitiv praktisch, ein ganzes Kit zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie können diese auch einzeln über die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`breadboard`
        - |link_breadboard_buy|
    *   - :ref:`wires`
        - |link_wires_buy|
    *   - :ref:`rotary_encoder`
        - |link_rotary_encoder_buy|

Schaltplan
----------

.. image:: ../img/image349.png
   :align: center

Experimentelle Verfahren
------------------------

**Schritt 1:** Bauen Sie den Schaltkreis.

.. image:: ../img/2.1.6_fritzing.png
   :align: center

In diesem Beispiel können wir den Drehgeber-Pin direkt an den 
Raspberry Pi anschließen. Verwenden Sie dazu ein Breadboard und ein 40-Pin-Kabel. Verbinden Sie 
das GND des Drehgebers mit GND, 「+」mit 5V, SW mit digitalem GPIO27, DT mit digitalem GPIO18 und CLK mit digitalem GPIO
17.

**Schritt 2:** Wechseln Sie in den Ordner des Codes.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Schritt 3:** Führen Sie den Code aus.

.. raw:: html

   <run></run>

.. code-block::

    sudo node rotary_encoder_module.js

Sie werden die Zählung in der Shell sehen. 
Wenn Sie den Drehgeber im Uhrzeigersinn drehen, erhöht sich der Zählerstand; 
drehen Sie ihn gegen den Uhrzeigersinn, verringert sich der Zählerstand. 
Wenn Sie den Schalter am Drehgeber drücken, wird der Zählerstand auf null zurückgesetzt.


**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const clkPin = new Gpio(17, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,
      edge: Gpio.RISING_EDGE
    });
    const dtPin = new Gpio(18, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,    
    });
    const swPin = new Gpio(27, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_UP,
      edge: Gpio.FALLING_EDGE
    });

    var globalCounter = 0;

    clkPin.on('interrupt',()=>{
      if(dtPin.digitalRead()==1){
          globalCounter--;
      }
      else{
          globalCounter++;
      }
      console.log(`globalCounter = ${globalCounter}`);
    });

    swPin.on('interrupt', () => {
      globalCounter = 0;
      console.log(`globalCounter = ${globalCounter}`);
    });




**Code Erklärung**

.. code-block:: js

    var globalCounter = 0;

    clkPin.on('interrupt',()=>{
      if(dtPin.digitalRead()==1){
          globalCounter--;
      }
      else{
          globalCounter++;
      }
      console.log(`globalCounter = ${globalCounter}`);
    });

Wenn dtPin von niedrig auf hoch wechselt und clkPin hoch ist,
die Zählung nimmt ab,
andernfalls erhöht sich die Anzahl.


.. code-block:: js

    swPin.on('interrupt', () => {
      globalCounter = 0;
      console.log(`globalCounter = ${globalCounter}`);
    });


Der swPin gibt einen Low-Ausgang aus, wenn die Welle gedrückt wird.
Lassen Sie den globalCounter an dieser Stelle auf Null gehen

Phänomen-Bild
--------------------

.. image:: ../img/2.1.6rotary_ecoder.JPG
   :align: center
   
