.. note::

    Ciao, benvenuto nella Community di appassionati di Raspberry Pi, Arduino e ESP32 di SunFounder su Facebook! Approfondisci le tue conoscenze su Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra community e del nostro team.
    - **Impara e condividi**: Scambia consigli e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato ai nuovi annunci di prodotti e alle anteprime.
    - **Sconti speciali**: Godi di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e giveaway**: Partecipa a concorsi e promozioni durante le festivit√†.

    üëâ Pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _2.1.6_js:

2.1.6 Modulo Encoder Rotativo
=================================

Introduzione
---------------

In questo progetto, imparerai a conoscere l'encoder rotativo. Un encoder rotativo √®
un interruttore elettronico che genera una serie di impulsi regolari in una sequenza 
temporale precisa. Quando utilizzato con un IC, pu√≤ consentire operazioni di incremento, 
decremento, cambiamento di pagina e altre operazioni come lo scorrimento del mouse, la 
selezione del menu, e cos√¨ via.

Componenti necessari
-------------------------

In questo progetto, abbiamo bisogno dei seguenti componenti. 

.. image:: ../img/Part_two_25.png

√à sicuramente conveniente acquistare un kit completo, ecco il link: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - OGGETTI IN QUESTO KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link sottostanti.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE AI COMPONENTI
        - LINK PER L'ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_rotary_encoder`
        - |link_rotary_encoder_buy|

Schema elettrico
-------------------

.. image:: ../img/image349.png
   :align: center

Procedure sperimentali
--------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/2.1.6_fritzing.png
   :align: center

In questo esempio, possiamo collegare direttamente i pin dell'encoder rotativo al
Raspberry Pi utilizzando una breadboard e un cavo a 40 pin. Collega il GND dell'encoder 
rotativo al GND, „Äå+„Äç a 5V, SW al GPIO digitale 27, DT al GPIO digitale 18 e CLK al GPIO 
digitale 17.

**Passo 2:** Vai alla cartella del codice.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Passo 3:** Esegui il codice.

.. raw:: html

   <run></run>

.. code-block::

    sudo node rotary_encoder_module.js

Vedrai il conteggio nel terminale. 
Quando ruoti l'encoder rotativo in senso orario, il conteggio aumenta; 
quando lo ruoti in senso antiorario, il conteggio diminuisce. 
Se premi l'interruttore sull'encoder rotativo, il conteggio verr√† resettato a zero.


**Codice**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const clkPin = new Gpio(17, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,
      edge: Gpio.RISING_EDGE
    });
    const dtPin = new Gpio(18, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,    
    });
    const swPin = new Gpio(27, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_UP,
      edge: Gpio.FALLING_EDGE
    });

    var globalCounter = 0;

    clkPin.on('interrupt',()=>{
      if(dtPin.digitalRead()==1){
          globalCounter--;
      }
      else{
          globalCounter++;
      }
      console.log(`globalCounter = ${globalCounter}`);
    });

    swPin.on('interrupt', () => {
      globalCounter = 0;
      console.log(`globalCounter = ${globalCounter}`);
    });



Spiegazione del Codice
--------------------------

.. code-block:: js

    var globalCounter = 0;

    clkPin.on('interrupt',()=>{
      if(dtPin.digitalRead()==1){
          globalCounter--;
      }
      else{
          globalCounter++;
      }
      console.log(`globalCounter = ${globalCounter}`);
    });

Quando dtPin passa da basso ad alto, se clkPin √® alto, 
il conteggio diminuisce, 
altrimenti il conteggio aumenta.


.. code-block:: js

    swPin.on('interrupt', () => {
      globalCounter = 0;
      console.log(`globalCounter = ${globalCounter}`);
    });

Quando swPin rileva una pressione, emetter√† un livello basso. 
In quel momento, il conteggio globale verr√† resettato a zero.


Immagine del fenomeno
--------------------------

.. image:: ../img/2.1.6rotary_ecoder.JPG
   :align: center
