2.1.3 Touch Switch Module
=================================

**Introduction**
-------------------

In this project, you will learn about touch switch module. It can replace the traditional kinds of switch with these advantages: convenient operation, fine touch sense, precise control and least mechanical wear.


**Components**
-----------------------------

.. image:: ../img/2.1.3component.png
    :width: 700
    :align: center

* :ref:`GPIO Extension Board`
* :ref:`Breadboard`
* :ref:`Resistor`
* :ref:`LED`
* :ref:`Touch Switch Module`

Schematic Diagram
-----------------

.. image:: ../img/2.1.3circuit.png
    :width: 500
    :align: center

**Experimental Procedures**
------------------------------

**Step 1:** Build the circuit.

.. image:: ../img/2.1.3fritzing.png
    :width: 700
    :align: center

**Step 2:** Go to the folder of the code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Step 3:** Run the code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node touch_switch.js

While the code is running, the red LED lights up; when you tap on the touch switch module, the yellow LED turns on. 

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio; 

    const led1 = new Gpio(22, {mode: Gpio.OUTPUT});
    const led2 = new Gpio(27, {mode: Gpio.OUTPUT});

    const touchSwitch = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

    touchSwitch.on('interrupt', (level) => {  
        led1.digitalWrite(level);   
        led2.digitalWrite(!level);       
    });   

**Code Explanation**

.. code-block:: js

    const Gpio = require('pigpio').Gpio; 

    const led1 = new Gpio(22, {mode: Gpio.OUTPUT});
    const led2 = new Gpio(27, {mode: Gpio.OUTPUT});

    const touchSwitch = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });


Import the ``pigpio`` module and create three objects led1, led2, touchSwitch,
By reading the level of the touchSwitch IO port, the on and off of led1 and led2 are controlled.

.. code-block:: js

    touchSwitch.on('interrupt', (level) => {  
        led1.digitalWrite(level);   
        led2.digitalWrite(!level);       
    });   

When the level of the read touchSwitch IO port changes,
Write the same level to led1 and the opposite level to led2.


**Phenomenon Picture**
------------------------

.. image:: ../img/2.1.3touch_switch_module.JPG
    :width: 500
    :align: center
    