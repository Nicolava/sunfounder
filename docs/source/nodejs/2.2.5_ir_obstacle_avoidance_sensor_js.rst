.. note::

    Ciao, benvenuto nella SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts Community su Facebook! Approfondisci Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra comunit√† e del nostro team.
    - **Impara e Condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato a nuovi annunci di prodotti e anteprime esclusive.
    - **Sconti speciali**: Approfitta di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e omaggi**: Partecipa a omaggi e promozioni durante le festivit√†.

    üëâ Pronto per esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _2.2.5_js:

2.2.5 Sensore IR per l'Evitamento degli Ostacoli
=====================================================

Introduzione
---------------

In questo progetto, impareremo a conoscere il modulo sensore IR per l'evitamento degli ostacoli. Questo modulo sensore pu√≤ essere utilizzato per rilevare ostacoli a brevi distanze, con bassa interferenza, facile da assemblare e da utilizzare. Pu√≤ essere ampiamente impiegato in robot per evitare ostacoli, carrelli con evitamento ostacoli, conteggio su linee di assemblaggio, e molto altro.

.. image:: ../img/2.2.5IR_Obstacle.png
   :width: 300
   :align: center

Componenti necessari
-----------------------

In questo progetto, abbiamo bisogno dei seguenti componenti.

.. image:: ../img/2.2.5component.png
   :width: 700
   :align: center

√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link qui sotto.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE AI COMPONENTI
        - LINK DI ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_avoid_module`
        - |link_obstacle_avoidance_buy|

Schema elettrico
-------------------

.. image:: ../img/IR_schematic.png
   :width: 500
   :align: center

Procedure sperimentali
-------------------------

**Passo 1:** Costruisci il circuito

.. image:: ../img/2.2.5fritzing.png
   :width: 700
   :align: center

**Passo 2:** Vai alla cartella del codice.

.. raw:: html

   <run></run>

.. code-block::

   cd ~/raphael-kit/nodejs/

**Passo 3:** Esegui il codice.

.. raw:: html

   <run></run>

.. code-block::

   sudo node ir_obstacle.js

Dopo l'esecuzione del codice, quando metti la mano davanti alla sonda del modulo, 
l'indicatore di uscita sul modulo si accende e "Detected Barrier!" verr√† stampato 
ripetutamente sullo schermo fino a quando non rimuovi la mano.

**Codice**

.. code-block:: js

   const Gpio = require('pigpio').Gpio; 

   const ir_ob = new Gpio(17, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,     
      edge: Gpio.FALLING_EDGE        
   });

   ir_ob.on('interrupt', () => {  
      console.log('Detected Barrier!');        
   });

**Spiegazione del codice**

.. code-block:: js

   const Gpio = require('pigpio').Gpio; 

   const ir_ob = new Gpio(17, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,     
      edge: Gpio.FALLING_EDGE        
   });

Importa il modulo pigpio, crea un oggetto per controllare la porta IO Gpio17, 
impostala in modalit√† input e configura un interrupt su bordo discendente.

.. code-block:: js

   ir_ob.on('interrupt', () => {  
      console.log('Detected Barrier!');        
   });

Quando viene attivato un interrupt, ovvero viene rilevato un ostacolo, stampa "Detected Barrier!".

Immagine del fenomeno
--------------------------

.. image:: ../img/2.2.5IR.JPG
   :width: 500
