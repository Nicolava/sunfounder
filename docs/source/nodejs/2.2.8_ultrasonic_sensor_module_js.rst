 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _2.2.8_js:

2.2.8 Module de Capteur Ultrasonique
========================================

Introduction
---------------

Le capteur ultrasonique utilise des ultrasons pour d√©tecter avec pr√©cision les objets et mesurer 
les distances. Il √©met des ondes ultrasonores et les convertit en signaux √©lectroniques.

Composants N√©cessaires
--------------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../img/list_2.2.5.png

Il est vraiment pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment en suivant les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_ultrasonic_sensor`
        - |link_ultrasonic_buy|

Sch√©ma de Montage
--------------------

.. image:: ../img/image329.png

Proc√©dures Exp√©rimentales
-----------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: ../img/image220.png

**√âtape 2 :** Allez dans le dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**√âtape 3 :** Ex√©cutez le code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node ultrasonic_sensor.js

Lorsque le code est ex√©cut√©, le module de capteur ultrasonique d√©tecte la distance entre 
l'obstacle devant lui et le module lui-m√™me, puis la valeur de la distance sera affich√©e 
√† l'√©cran.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    // The number of microseconds it takes sound to travel 1cm at 20 degrees celcius
    const MICROSECDONDS_PER_CM = 1e6/34321;

    const trigger = new Gpio(23, {mode: Gpio.OUTPUT});
    const echo = new Gpio(24, {mode: Gpio.INPUT, alert: true});

    trigger.digitalWrite(0); // Make sure trigger is low

    const watchHCSR04 = () => {
      let startTick;

      echo.on('alert', (level, tick) => {
        if (level === 1) {
          startTick = tick;
        } else {
          const endTick = tick;
          const diff = (endTick >> 0) - (startTick >> 0); // Unsigned 32 bit arithmetic
          console.log(diff / 2 / MICROSECDONDS_PER_CM);
        }
      });
    };

    watchHCSR04();

    // Trigger a distance measurement once per second
    setInterval(() => {
      trigger.trigger(10, 1); // Set trigger high for 10 microseconds
    }, 1000);




**Explication du Code**

La fonction ``trigger`` peut √™tre utilis√©e pour g√©n√©rer une impulsion sur un GPIO et
les ``alertes`` peuvent √™tre utilis√©es pour d√©terminer le moment d'un changement d'√©tat GPIO
avec une pr√©cision de quelques microsecondes.

Ces deux fonctionnalit√©s peuvent √™tre combin√©es pour mesurer la distance √† l'aide d'un capteur ultrasonique HC-SR04.

.. code-block:: js

    setInterval(() => {
      trigger.trigger(10, 1); // D√©clencher haut pendant 10 microsecondes
    }, 1000);

Cela permet d'envoyer p√©riodiquement une impulsion ultrasonique de 10us.

.. code-block:: js

  const watchHCSR04 = () => {

    echo.on('alert', (level, tick) => {
        if (level === 1) {
          startTick = tick;
        } else {
          const endTick = tick;
          const diff = (endTick >> 0) - (startTick >> 0); // Arithm√©tique non sign√©e sur 32 bits
          console.log(diff / 2 / MICROSECONDES_PAR_CM);
        }    
    });
  };

Cette fonction d√©finit une alerte qui enregistrera le temps entre l'envoi de l'impulsion (le niveau est 1) et la r√©ception de l'√©cho (le niveau est 0).
En multipliant la diff√©rence de temps par la vitesse du son (et en divisant par 2), vous pouvez obtenir la distance de l'obstacle devant vous.

.. https://github.com/fivdi/pigpio

Image du Ph√©nom√®ne
----------------------

.. image:: ../img/image221.jpeg
