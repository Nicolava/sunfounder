.. _3.1.1_js:

3.1.1 Fotografie-Modul
==========================

Einführung
-----------------

In diesem Kit ist ein Kameramodul enthalten. Lassen Sie uns versuchen, mit dem Raspberry Pi ein Foto zu machen.

Benötigte Komponenten
------------------------------

Für dieses Projekt benötigen wir die folgenden Komponenten.

.. image:: ../img/photo1.png
  :width: 800

Es ist definitiv praktisch, ein ganzes Kit zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie können diese auch separat über die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`camera_module`
        - |link_camera_buy|

Experimentelle Verfahren
------------------------------

**Schritt 1:** Betreten Sie den Raspberry Pi Desktop. Für ein besseres Erlebnis benötigen Sie möglicherweise einen Bildschirm. Siehe: `Verbinden Sie Ihren Raspberry Pi <https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/3>`_. Oder greifen Sie remote auf den Raspberry Pi Desktop zu. Eine ausführliche Anleitung finden Sie unter :ref:`windows_remote_desktop`.

**Schritt 2:** Öffnen Sie ein Terminal und wechseln Sie in den Ordner des Codes.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Schritt 3:** Führen Sie den Code aus.

.. raw:: html

   <run></run>

.. code-block::

    sudo node camera.js

Nachdem der Code ausgeführt wurde, wird die Kamera ein Foto machen. Jetzt können Sie das Foto mit dem Namen ``test.jpg`` im aktuellen Verzeichnis sehen.

**Code**

.. code-block:: js

    const exec = require('child_process').exec;

    exec('libcamera-still -o test.jpg');

**Code-Erklärung**

.. code-block:: js

    const exec = require('child_process').exec;

Importieren Sie das Modul ``child_process``, das es Node.js ermöglicht, verschiedene Operationen an untergeordneten Prozessen durchzuführen, einschließlich der Erstellung von Kindprozessen, um Systembefehle direkt auszuführen.

.. note:: 
    Über dieses Modul informieren Sie sich bitte unter: https://nodejs.org/api/child_process.html

.. code-block:: js

    exec('libcamera-still -o test.jpg');

Nachdem die Kamerafunktion aktiviert wurde, können Sie mit dem Befehl ``libcamera-still -o test.jpg`` direkt Fotos im Terminal aufnehmen. Wir können auch die Methode ``child_process.exec(cmd, [options], callback)`` des Moduls ``child_process`` verwenden, um Kindprozesse zu erstellen, die Systembefehle ausführen.

Durch Hinzufügen von Schleifen- und Verzögerungsfunktionen können wir auch den Effekt von zeitgesteuerten Fotos oder Zeitraffer-Videos erzielen.
