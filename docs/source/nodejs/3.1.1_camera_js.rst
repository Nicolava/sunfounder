 
.. _3.1.1_js:

3.1.1 Module de photographie
================================

Introduction
---------------

Dans ce kit, équipé d'un module caméra, essayons de prendre une photo avec le Raspberry Pi.

Composants requis
--------------------

Pour ce projet, nous avons besoin des composants suivants. 

.. image:: ../img/photo1.png
  :width: 800

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ÉLÉMENTS DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez également les acheter séparément via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_camera_module`
        - |link_camera_buy|

Procédures expérimentales
-------------------------

**Étape 1 :** Aller sur le bureau du Raspberry Pi. Vous aurez peut-être besoin d'un écran pour une meilleure expérience, référez-vous à : `Connecter votre Raspberry Pi <https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/3>`_. Ou accédez au bureau du Raspberry Pi à distance, pour un tutoriel détaillé veuillez vous référer à :ref:`remote_desktop`.

**Étape 2 :** Ouvrir un terminal et aller dans le dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Étape 3 :** Exécuter le code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node camera.js

Après l'exécution du code, la caméra prendra une photo. Vous pouvez maintenant voir la photo nommée ``test.jpg`` dans le répertoire actuel.


**Code**

.. code-block:: js

    const exec = require('child_process').exec;

    exec('libcamera-still -o test.jpg');

**Explication du code**

.. code-block:: js

    const exec = require('child_process').exec;

Importer le module ``child_process``, qui permet à nodejs d'effectuer diverses opérations sur les processus fils, y compris la création de processus fils pour exécuter directement des commandes système.

.. note:: 
    Pour plus de détails sur ce module, veuillez consulter : https://nodejs.org/api/child_process.html

.. code-block:: js

    exec('libcamera-still -o test.jpg');

Après avoir activé la fonction caméra, vous pouvez directement utiliser la commande ``libcamera-still -o test.jpg`` pour capturer des photos dans le terminal. Nous pouvons également utiliser la méthode fournie par le module ``child_process`` ``child_process.exec(cmd, [options], callback)`` pour créer des processus fils afin d'exécuter des commandes système.

En ajoutant des fonctions de boucle et de délai, nous pouvons également obtenir l'effet de photos programmées ou de vidéos en time-lapse.
