.. note::

    Ciao, benvenuto nella SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts Community su Facebook! Approfondisci Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra comunit√† e del nostro team.
    - **Impara e Condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato a nuovi annunci di prodotti e anteprime esclusive.
    - **Sconti speciali**: Approfitta di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e omaggi**: Partecipa a omaggi e promozioni durante le festivit√†.

    üëâ Pronto per esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _3.1.1_js:

3.1.1 Modulo Fotocamera
=======================

Introduzione
----------------

In questo kit, dotato di un modulo fotocamera, proviamo a scattare una foto con Raspberry Pi.

Componenti necessari
-----------------------

In questo progetto, abbiamo bisogno dei seguenti componenti.

.. image:: ../img/photo1.png
  :width: 800

√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link qui sotto.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE AI COMPONENTI
        - LINK DI ACQUISTO

    *   - :ref:`cpn_camera_module`
        - |link_camera_buy|

Procedure sperimentali
--------------------------

**Passo 1:** Accedi al desktop del Raspberry Pi. Potrebbe essere necessario uno schermo per una migliore esperienza, fai riferimento a: `Connetti il tuo Raspberry Pi <https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/3>`_. Oppure accedi al desktop del Raspberry Pi in remoto, per un tutorial dettagliato consulta :ref:`remote_desktop`.

**Passo 2:** Apri un Terminale ed entra nella cartella del codice.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Passo 3:** Esegui il codice.

.. raw:: html

   <run></run>

.. code-block::

    sudo node camera.js

Dopo l'esecuzione del codice, la fotocamera scatter√† una foto. Ora puoi vedere la 
foto chiamata ``test.jpg`` nella directory corrente.

**Codice**

.. code-block:: js

    const exec = require('child_process').exec;

    exec('libcamera-still -o test.jpg');

**Spiegazione del codice**

.. code-block:: js

    const exec = require('child_process').exec;

Importa il modulo ``child_process``, che consente a nodejs di eseguire varie operazioni sui processi figlio, inclusa la creazione di processi figlio per eseguire direttamente i comandi di sistema.

.. note:: 
    Per ulteriori informazioni su questo modulo, consulta: https://nodejs.org/api/child_process.html

.. code-block:: js

    exec('libcamera-still -o test.jpg');

Dopo aver abilitato la funzione fotocamera, puoi utilizzare direttamente il comando ``libcamera-still -o test.jpg`` per scattare foto nel terminale. Possiamo anche usare il metodo fornito dal modulo ``child_process`` ``child_process.exec(cmd, [options] , callback)`` per creare processi figlio che eseguano comandi di sistema.


Aggiungendo funzioni di loop e ritardo, possiamo anche ottenere l'effetto di foto a intervalli di tempo o video in time-lapse.
