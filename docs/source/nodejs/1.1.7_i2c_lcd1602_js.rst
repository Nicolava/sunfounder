.. note::

    Ciao, benvenuto nella Community di appassionati di Raspberry Pi, Arduino e ESP32 di SunFounder su Facebook! Approfondisci il tuo viaggio con Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra community e del nostro team.
    - **Impara e condividi**: Scambia consigli e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato a nuovi annunci di prodotti e anteprime.
    - **Sconti speciali**: Godi di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni e concorsi festivi**: Partecipa a concorsi e promozioni durante le festivit√†.

    üëâ Pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _1.1.7_js:

1.1.7 I2C LCD1602
=======================

Introduzione
----------------------

LCD1602 √® un display a cristalli liquidi di tipo carattere, che pu√≤ visualizzare 32 caratteri (16x2) contemporaneamente.

Componenti necessari
------------------------------

In questo progetto, abbiamo bisogno dei seguenti componenti. 

.. image:: ../img/list_i2c_lcd.png

√à sicuramente conveniente acquistare un kit completo, ecco il link: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - OGGETTI IN QUESTO KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link sottostanti.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE AI COMPONENTI
        - LINK PER L'ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_i2c_lcd`
        - |link_i2clcd1602_buy|

Schema elettrico
----------------------

============ ========
Nome scheda   Fisico
SDA1         Pin 3
SCL1         Pin 5
============ ========

.. image:: ../img/schematic_i2c_lcd.png

Procedure sperimentali
-----------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/image96.png

**Passo 2**: Configura I2C (vedi :ref:`i2c_config`. Se hai gi√† configurato I2C, salta questo passaggio.)

**Passo 3:** Vai alla cartella del codice.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Passo 4:** Installa le dipendenze.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo npm install @oawu/lcd1602

**Passo 5:** Esegui il codice.

.. raw:: html

   <run></run>

.. code-block::

    sudo node i2c_lcd1602.js

Dopo l'esecuzione del codice, sul display LCD vedrai il messaggio ``Greetings!!, From SunFounder``.

**Codice**

.. code-block:: js

    const LCD = require('@oawu/lcd1602');
    const lcd = new LCD();

    lcd.text(0, 0, 'Greetings!!');
    lcd.text(1, 1, 'from SunFounder');

**Spiegazione del codice**

.. code-block:: js

    const LCD = require('@oawu/lcd1602');
    const lcd = new LCD();

Importa il modulo ``lcd1602`` e rappresentalo con ``lcd``.

.. note::
    Per maggiori informazioni sul modulo lcd1602, consulta: https://www.npmjs.com/package/@oawu/lcd1602

   
.. code-block:: js

    lcd.text(0, 0, 'Greetings!!');
    lcd.text(1, 1, 'from SunFounder');

Chiamando la funzione incapsulata ``text()`` nella classe ``LCD``, possiamo far visualizzare il testo che desideriamo sul display lcd1602.

La funzione ``text()`` riceve tre parametri: 
il primo parametro √® la riga del lcd1602, 
il secondo parametro rappresenta la posizione del testo visualizzato, 
e il terzo parametro rappresenta il testo che vogliamo visualizzare.

Il numero **1602** nel modello LCD significa che ha 2 righe di 16 celle ciascuna.

Immagine del fenomeno
--------------------------

.. image:: ../img/image97.jpeg

