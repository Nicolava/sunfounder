.. note::

    Ciao, benvenuto nella SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts Community su Facebook! Approfondisci Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra comunit√† e del nostro team.
    - **Impara e Condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato a nuovi annunci di prodotti e anteprime esclusive.
    - **Sconti speciali**: Approfitta di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e omaggi**: Partecipa a omaggi e promozioni durante le festivit√†.

    üëâ Pronto per esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _2.2.3_js:

2.2.3 DHT-11
===============

Introduzione
--------------

Il sensore digitale di temperatura e umidit√† DHT11 √® un sensore composito
che include un'uscita di segnale digitale calibrata di temperatura e
umidit√†. La tecnologia di raccolta dei moduli digitali dedicati e quella
di rilevamento della temperatura e dell'umidit√† vengono applicate per
garantire un'elevata affidabilit√† e un'eccellente stabilit√† del prodotto.

Il sensore comprende un elemento resistivo sensibile all'umidit√† e un sensore 
di temperatura NTC, entrambi collegati a un microcontrollore a elevate prestazioni a 8 bit.


Componenti necessari
--------------------

In questo progetto, abbiamo bisogno dei seguenti componenti.

.. image:: ../img/list_2.2.3_dht-11.png

√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link qui sotto.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE AI COMPONENTI
        - LINK DI ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_humiture_sensor`
        - |link_humiture_buy|

Schema elettrico
-------------------

.. image:: ../img/image326.png


Procedure sperimentali
--------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/image207.png

**Passo 2:** Vai alla cartella del codice.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Passo 3:** Installa le dipendenze.

.. raw:: html

   <run></run>

.. code-block::

    sudo npm install node-dht-sensor

**Passo 4:** Esegui il codice.

.. raw:: html

   <run></run>

.. code-block::

    sudo node dht11.js

Dopo l'esecuzione del codice, il programma stamper√† sullo schermo 
del computer la temperatura e l'umidit√† rilevate dal DHT11.

**Codice**

.. code-block:: js

    var sensor = require("node-dht-sensor");

    setInterval(function(){ 
      sensor.read(11, 17, function(err, temperature, humidity) {
        if (!err) {
          console.log(`temp: ${temperature}\`C, humidity: ${humidity}%`);
        }
      });
    },1000);

**Spiegazione del codice**

.. code-block:: js

    var sensor = require("node-dht-sensor");

Importa il modulo ``node-dht-sensor``, che fornisce le funzioni per leggere i valori del DHT-11.

.. note::
  Per ulteriori dettagli, consulta: https://www.npmjs.com/package/node-dht-sensor

.. code-block:: js

    sensor.read(11, 17, function(err, temperature, humidity){...})

Il modulo ``node-dht-sensor`` fornisce la funzione ``read()`` per leggere la 
temperatura e l'umidit√† misurate, dove **11** indica il DHT-11 e **17** indica 
che √® collegato a GPIO17.

.. code-block:: js

    if (!err) {
      console.log(`temp: ${temperature}\`C, humidity: ${humidity}%`);
    }    

Quando non ci sono errori nella lettura, i valori di temperatura e umidit√† vengono stampati sul terminale.


Immagine del fenomeno
---------------------------

.. image:: ../img/image209.jpeg
