.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _2.2.3_js:

2.2.3 DHT-11
============

Einleitung
----------

Der digitale Temperatur- und Feuchtigkeitssensor DHT11 ist ein zusammengesetzter Sensor, 
der einen kalibrierten digitalen Signal-Ausgang f√ºr Temperatur und Feuchtigkeit enth√§lt. 
Durch die Anwendung der Technologie einer dedizierten digitalen Modulsammlung und der 
Technologie zur Temperatur- und Feuchtigkeitserfassung wird sichergestellt, dass das Produkt 
eine hohe Zuverl√§ssigkeit und hervorragende Stabilit√§t aufweist.

Die Sensoren umfassen einen feuchteempfindlichen Widerstandssensor und einen NTC-Temperatursensor, 
die an einen leistungsstarken 8-Bit-Mikrocontroller angeschlossen sind.

Ben√∂tigte Komponenten
---------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

.. image:: ../img/list_2.2.3_dht-11.png

Es ist definitiv praktisch, ein gesamtes Kit zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie k√∂nnen sie auch einzeln √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_humiture_sensor`
        - |link_humiture_buy|

Schaltplan
----------

.. image:: ../img/image326.png

Experimentelle Verfahren
-----------------------------

**Schritt 1:** Schalten Sie den Stromkreis.

.. image:: ../img/image207.png

**Schritt 2:** Navigieren Sie zu dem Ordner mit dem Code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Schritt 3:** Installieren Sie die Abh√§ngigkeiten.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo npm install node-dht-sensor

**Schritt 4:** Starten Sie den Code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node dht11.js

Nachdem der Code ausgef√ºhrt wurde, zeigt das Programm die von DHT11 erfasste Temperatur und Feuchtigkeit auf dem Computerbildschirm an.

**Code**

.. code-block:: js

    var sensor = require("node-dht-sensor");

    setInterval(function(){ 
      sensor.read(11, 17, function(err, temperature, humidity) {
        if (!err) {
          console.log(`temp: ${temperature}\`C, humidity: ${humidity}%`);
        }
      });
    },1000);

**Code-Erkl√§rung**

.. code-block:: js

    var sensor = require("node-dht-sensor");

Importieren des Moduls ``node-dht-sensor``, das Funktionen zum Auslesen des DHT-11-Werts bereitstellt.

.. note::
  F√ºr weitere Details, siehe: https://www.npmjs.com/package/node-dht-sensor

.. code-block:: js

    sensor.read(11, 17, function(err, temperature, humidity){...})

Das Modul ``node-dht-sensor`` stellt die Funktion ``read()`` zur Verf√ºgung, mit der wir die gemessene Temperatur und Feuchtigkeit auslesen k√∂nnen,
wobei **11** f√ºr DHT-11 steht und **17** bedeutet, dass es an GPIO17 angeschlossen ist.

.. code-block:: js

    if (!err) {
      console.log(`temp: ${temperature}\`C, humidity: ${humidity}%`);
    }    

Wenn beim Auslesen kein Fehler auftritt, werden die Temperatur- und Feuchtigkeitswerte im Terminal angezeigt.

Ph√§nomen-Bild
-----------------

.. image:: ../img/image209.jpeg
    