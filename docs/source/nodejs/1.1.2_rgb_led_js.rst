 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _1.1.2_js:

1.1.2 LED RGB
==================

Introduction
----------------

Dans ce projet, nous allons contr√¥ler une LED RGB pour qu'elle clignote en diverses couleurs.

Composants N√©cessaires
--------------------------------

Dans ce projet, nous aurons besoin des composants suivants : 


.. image:: img/list_rgb_led.png
    :align: center

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_rgb_led`
        - |link_rgb_led_buy|

Sch√©ma de C√¢blage
-----------------------

Apr√®s avoir connect√© les broches R, G et B √† une r√©sistance de limitation de courant, connectez-les 
respectivement aux GPIO17, GPIO18 et GPIO27. La broche la plus longue (GND) de la LED se connecte 
au GND du Raspberry Pi. Lorsque les trois broches re√ßoivent diff√©rentes valeurs PWM, la LED RGB 
affichera diff√©rentes couleurs.

.. image:: img/rgb_led_schematic.png
Proc√©dures Exp√©rimentales
----------------------------

**√âtape 1:** Construire le circuit.

.. image:: img/image61.png

**√âtape 2:** Aller dans le dossier du code.

.. raw:: html

    <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**√âtape 3:** Ex√©cuter le code.

.. raw:: html

    <run></run>

.. code-block::

    sudo node rgb_led.js

Apr√®s l'ex√©cution du code, vous verrez que la LED RGB affiche les couleurs rouge, vert, bleu, jaune, rose et cyan.   

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const ledred = new Gpio(17, { mode: Gpio.OUTPUT });
    const ledgreen = new Gpio(18, { mode: Gpio.OUTPUT });
    const ledblue = new Gpio(27, { mode: Gpio.OUTPUT });

    function colorset(r, g, b) {
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);  

**Explication du Code**

.. code-block:: js

    const ledred = new Gpio(17,{mode: Gpio.OUTPUT});
    const ledgreen = new Gpio(18,{mode: Gpio.OUTPUT});
    const ledblue = new Gpio(27,{mode: Gpio.OUTPUT});

Initialiser les broches 17, 18 et 27 en mode sortie, et les assigner respectivement aux constantes ``ledred``, ``ledgreen`` et ``ledblue``.

.. code-block:: js

    function colorset(r,g,b){
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

Impl√©menter une fonction ``colorset(r,g,b)``, qui est utilis√©e pour √©crire des valeurs de pulsation sur les broches 17, 18 et 27. La biblioth√®que Gpio encapsule la fonction ``pwmWrite()`` pour √©crire des valeurs de pulsation sur les broches, dont les valeurs vont de 0x00 √† 0xff. Ensuite, vous pouvez √©crire les valeurs RGB dans la LED RGB via la fonction ``colorset(r,g,b)``, afin qu'elle puisse afficher une vari√©t√© de couleurs.

.. note::
    Pour des questions sur le RGB, veuillez consulter le site : https://www.rapidtables.com/web/color/RGB_Color.html

.. code-block:: js

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);  

La LED RGB est contr√¥l√©e par ``colorset()`` ex√©cut√©e toutes les 500ms.
Un switch case est utilis√© ici pour s√©lectionner la couleur √©mise par les LEDs RGB.
Comme ``color_index`` est chang√© de un √† chaque cycle, la couleur de cette LED RGB changera en ordre.


Image du Ph√©nom√®ne
------------------------

.. image:: img/image62.jpeg
