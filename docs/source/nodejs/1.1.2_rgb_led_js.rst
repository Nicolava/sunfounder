.. note::

    ¬°Hola, bienvenido a la comunidad de entusiastas de SunFounder Raspberry Pi, Arduino y ESP32 en Facebook! Sum√©rgete m√°s profundamente en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte experto**: Resuelve problemas postventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Vistas previas exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y avances.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo!

.. _1.1.2_js:

1.1.2 LED RGB
=================

Introducci√≥n
----------------

En este proyecto, controlaremos un LED RGB para que parpadee en varios colores.

Componentes Necesarios
------------------------------

En este proyecto, necesitamos los siguientes componentes. 

.. image:: img/list_rgb_led.png
    :align: center

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_rgb_led`
        - |link_rgb_led_buy|

Diagrama Esquem√°tico
---------------------------

Despu√©s de conectar los pines de R, G y B a una resistencia limitadora de corriente,
con√©ctalos a los GPIO17, GPIO18 y GPIO27 respectivamente. La pata m√°s larga (GND) del 
LED se conecta al GND de la Raspberry Pi. Cuando los tres pines reciben diferentes valores 
PWM, el LED RGB mostrar√° diferentes colores.

.. image:: img/rgb_led_schematic.png

Procedimientos Experimentales
----------------------------------

**Paso 1:** Construye el circuito.

.. image:: img/image61.png

**Paso 2:** Ve a la carpeta del c√≥digo.

.. raw:: html

    <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Paso 3:** Ejecuta el c√≥digo.

.. raw:: html

    <run></run>

.. code-block::

    sudo node rgb_led.js

Despu√©s de ejecutar el c√≥digo, ver√°s que el LED RGB muestra los colores rojo, verde, azul, amarillo, rosa y cian.
**C√≥digo**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const ledred = new Gpio(17, { mode: Gpio.OUTPUT });
    const ledgreen = new Gpio(18, { mode: Gpio.OUTPUT });
    const ledblue = new Gpio(27, { mode: Gpio.OUTPUT });

    function colorset(r, g, b) {
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);  

**Explicaci√≥n del C√≥digo**

.. code-block:: js

    const ledred = new Gpio(17,{mode: Gpio.OUTPUT});
    const ledgreen = new Gpio(18,{mode: Gpio.OUTPUT});
    const ledblue = new Gpio(27,{mode: Gpio.OUTPUT});

Inicializa los pines 17, 18 y 27 en modo de salida, y as√≠gnalos a las constantes ``ledred``, ``ledgreen`` y ``ledblue`` respectivamente.

.. code-block:: js

    function colorset(r,g,b){
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

Implementa una funci√≥n ``colorset(r,g,b)``, que se usa para escribir valores de pulso en los pines 17, 18, 27. La biblioteca Gpio encapsula la funci√≥n ``pwmWrite()`` para escribir en los pines el valor del pulso, que var√≠a de 0x00 a 0xff. Luego, puedes escribir valores RGB en el LED RGB a trav√©s de la funci√≥n ``colorset(r,g,b)``, para que pueda mostrar una variedad de colores.

.. note::
    Para preguntas sobre RGB, por favor consulta el sitio web: https://www.rapidtables.com/web/color/RGB_Color.html

.. code-block:: js

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);  

El LED RGB es controlado por ``colorset()`` ejecutado cada 500ms.
Se utiliza un switch case aqu√≠ para seleccionar el color emitido por los LEDs RGB.
Dado que ``color_index`` cambia en uno cada ciclo, el color de este LED RGB cambiar√° en orden.


Imagen del Fen√≥meno
------------------------

.. image:: img/image62.jpeg



