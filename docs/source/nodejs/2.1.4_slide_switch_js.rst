.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _2.1.4_js:

2.1.4 スライドスイッチ
=======================

はじめに
------------

このプロジェクトでは、スライドスイッチの使用方法を学びます。通常、スライドスイッチはPCB上にはんだ付けされて電源スイッチとして使用されますが、ここではブレッドボードに挿入する必要がありますので、固定されていない場合があります。そして、その機能を示すために、ブレッドボード上で使用します。

必要な部品
------------------------------

このプロジェクトで必要な部品は以下のとおりです。

.. image:: ../img/list_2.1.2_slide_switch.png

全てのキットをまとめて購入するのは非常に便利です。以下はリンクです：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前	
        - このキットのアイテム
        - リンク
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

以下のリンクから個別に購入することもできます。

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - コンポーネントの紹介
        - 購入リンク

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_slide_switch`
        - |link_slide_switch_buy|
    *   - :ref:`cpn_capacitor`
        - |link_capacitor_buy|

回路図
-----------------

.. image:: ../img/image305.png

.. image:: ../img/image306.png

実験手順
-----------------------

**ステップ1:** 回路を作成する。

.. image:: ../img/image161.png

**ステップ2:** コードのフォルダに移動する。

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**ステップ3:** コードを実行する。

.. raw:: html

   <run></run>

.. code-block::

    sudo node slide_switch.js

コードが実行中の場合、スイッチを左に接続すると、黄色のLEDが点灯します。右にすると、赤い光が点灯します。

**コード**

.. code-block:: js

    const Gpio = require('pigpio').Gpio; 

    const led1 = new Gpio(22, {mode: Gpio.OUTPUT});
    const led2 = new Gpio(27, {mode: Gpio.OUTPUT});

    const slideSwitch = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

    slideSwitch.on('interrupt', (level) => {  
        led1.digitalWrite(level);   
        led2.digitalWrite(!level);       
    });   

**コード説明**

.. code-block:: js

    const Gpio = require('pigpio').Gpio; 

    const led1 = new Gpio(22, {mode: Gpio.OUTPUT});
    const led2 = new Gpio(27, {mode: Gpio.OUTPUT});

    const slideSwitch = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

pigpioモジュールをインポートし、led1、led2、slideSwitchという3つのオブジェクトを作成します。
slideSwitch IOポートのレベルを読み取り、led1とled2のオンとオフを制御します。

.. code-block:: js

    slideSwitch.on('interrupt', (level) => {  
        led1.digitalWrite(level);   
        led2.digitalWrite(!level);       
    });   

slideSwitch IOポートの読取りレベルが変化すると、
led1に同じレベルを、led2に反対のレベルを書き込みます。

現象の画像
------------------

.. image:: ../img/image162.jpeg


