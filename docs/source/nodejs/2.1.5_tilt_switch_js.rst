 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _2.1.5_js:

2.1.5 Interrupteur √† Bascule
===============================

Introduction
---------------

Ceci est un interrupteur √† bascule √† bille avec une bille en m√©tal √† l'int√©rieur. Il est utilis√© pour d√©tecter des inclinaisons de petits angles.

Composants N√©cessaires
-------------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../img/list_2.1.3_tilt_switch.png

Il est vraiment pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_tilt_switch`
        - \-

Sch√©ma de Circuit
--------------------

.. image:: ../img/image307.png

.. image:: ../img/image308.png

Proc√©dures Exp√©rimentales
----------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: ../img/image169.png

**√âtape 2 :** Acc√©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/nodejs/

**√âtape 3 :** Ex√©cutez le code.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo node tilt_switch.js

Placez l'interrupteur √† bascule verticalement, et la LED verte s'allumera. Si vous le basculez, 
la LED rouge s'allumera. Replacez-le verticalement, et la LED verte se rallumera.

**Code**

.. raw:: html

    <run></run>

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const led1 = new Gpio(22, { mode: Gpio.OUTPUT });
    const led2 = new Gpio(27, { mode: Gpio.OUTPUT });

    const tilt = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

    tilt.on('interrupt', (level) => {  
        if (level) {
            console.log("Horizontally");
        }
        else {
            console.log("Vertically");
        }
        led1.digitalWrite(level);
        led2.digitalWrite(!level);    
    });

**Explication du Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const led1 = new Gpio(22, { mode: Gpio.OUTPUT });
    const led2 = new Gpio(27, { mode: Gpio.OUTPUT });

    const tilt = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

Importez le module pigpio et cr√©ez trois objets : led1, led2 et tilt. En lisant le niveau du 
port IO du tilt, on contr√¥le l'allumage et l'extinction de led1 et led2.

.. code-block:: js

    const tilt = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

Cr√©ez un objet tilt pour contr√¥ler le port IO Gpio17, r√©glez-le en mode entr√©e avec une 
r√©sistance de tirage vers le bas (niveau bas initialement). D√©finissez la fonction 
d'interruption, le mode est EITHER_EDGE, c'est-√†-dire que les deux bords montants 
et descendants d√©clencheront la fonction d'interruption.

.. code-block:: js

    tilt.on('interrupt', (level) => {  
        if (level) {
            console.log("Horizontally");
        }
        else {
            console.log("Vertically");
        }
        led1.digitalWrite(level);
        led2.digitalWrite(!level);    
    });

Lorsque l'interruption est d√©clench√©e, √©crivez le m√™me niveau √† led1 et l'oppos√© √† led2. 
Lorsque le port IO du tilt est √©lev√©, le terminal affiche "Horizontally"; lorsque le port IO 
du tilt est bas, le terminal affiche "Vertically".



Ph√©nom√®ne Observ√©
-----------------

.. image:: ../img/image170.jpeg


