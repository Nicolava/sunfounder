.. note::

    Ciao, benvenuto nella SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts Community su Facebook! Approfondisci Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra comunit√† e del nostro team.
    - **Impara e Condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato a nuovi annunci di prodotti e anteprime esclusive.
    - **Sconti speciali**: Approfitta di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e omaggi**: Partecipa a omaggi e promozioni durante le festivit√†.

    üëâ Pronto per esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _2.2.6_js:

2.2.6 Modulo Sensore di Velocit√†
====================================

Introduzione
--------------------

In questo progetto, impareremo a utilizzare il modulo sensore di velocit√†. Un modulo sensore di velocit√† √® un tipo di tachimetro utilizzato per misurare la velocit√† di un oggetto rotante, come un motore.

Componenti necessari
--------------------------

In questo progetto, abbiamo bisogno dei seguenti componenti.

.. image:: ../img/2.2.6component.png
    :width: 700
    :align: center

√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link qui sotto.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE AI COMPONENTI
        - LINK DI ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_speed_sensor`
        - \-

Schema elettrico
--------------------

.. image:: ../img/2.2.6circuit.png
    :width: 400
    :align: center

Procedure sperimentali
--------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/2.2.6fritzing.png
    :width: 700
    :align: center

**Passo 2:** Vai alla cartella del codice.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Passo 3:** Esegui il codice.

.. raw:: html

   <run></run>

.. code-block::

    sudo node speed_sensor_module.js

Dopo l'esecuzione del codice, il LED verde si accender√†. Se inserisci un 
ostacolo nel sensore di velocit√†, verr√† stampato sullo schermo "light blocked" 
e si accender√† il LED rosso. Rimuovi l'ostacolo e il LED verde si riaccender√†.

**Codice**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const Rpin = new Gpio(22, { mode: Gpio.OUTPUT });
    const Gpin = new Gpio(27, { mode: Gpio.OUTPUT });

    const speedPin = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

    speedPin.on('interrupt', (level) => {
        if (level) {
            console.log("Light was blocked");
        }
        Rpin.digitalWrite(level);
        Gpin.digitalWrite(!level);
    });

    process.on('SIGINT', function () {
        Rpin.digitalWrite(0);
        Gpin.digitalWrite(0);
        process.exit();
    });

**Spiegazione del codice**

Il codice di questo esempio √® quasi identico a :ref:`2.1.5_js`, quindi non √® necessario ripeterlo.

Immagine del fenomeno
-------------------------

.. image:: ../img/2.2.6photo_interrrupter.JPG
    :width: 500
    :align: center
