.. _2.1.1_js:

2.1.1 Schalter
==============

Einführung
----------

In diesem Projekt lernen wir, wie man eine LED mit einem Schalter ein- oder ausschaltet.

Benötigte Komponenten
-------------------------

Für dieses Projekt benötigen wir die folgenden Komponenten.

.. image:: ../img/list_2.1.1_Button.png

Es ist definitiv praktisch, ein ganzes Set zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie können sie auch separat über die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|

Schaltplan
-------------

Verwenden Sie einen normalerweise offenen Schalter als Eingang des Raspberry Pi. Die Verbindung ist im untenstehenden Schaltplan dargestellt. Wenn der Schalter gedrückt wird, wechselt der GPIO18 in den Niedrigzustand (0V). Über die Programmierung können wir den Zustand des GPIO18 erkennen. Das heißt, wenn der GPIO18 in den Niedrigzustand wechselt, bedeutet dies, dass der Schalter gedrückt wurde. Sie können den entsprechenden Code ausführen, wenn der Schalter gedrückt wird, und dann wird die LED leuchten.

.. note::
    Der längere Pin der LED ist die Anode und der kürzere ist die Kathode.

.. image:: ../img/image302.png

.. image:: ../img/image303.png

Experimentelle Verfahren
-----------------------------

**Schritt 1**: Bauen Sie den Schaltkreis.

.. image:: ../img/image152.png

**Schritt 2**: Navigieren Sie zum Ordner des Codes.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/nodejs/

**Schritt 3**: Führen Sie den Code aus.

.. raw:: html

   <run></run>

.. code-block::

    sudo node button.js

Jetzt drücken Sie den Schalter, und die LED leuchtet auf. 
Lassen Sie den Schalter los, und die LED erlischt.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio; 

    const led = new Gpio(17, {mode: Gpio.OUTPUT});
   
    const button = new Gpio(18, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,     
      edge: Gpio.EITHER_EDGE        
    });

    button.on('interrupt', (level) => {  
      led.digitalWrite(level);          
    });

**Code-Erklärung**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;    

    const led = new Gpio(17, {mode: Gpio.OUTPUT});

Importieren Sie das ``pigpio`` Modul, erstellen Sie ein led Objekt, um den IO-Port Gpio17 zu steuern, und setzen Sie ihn in den Ausgabemodus.

.. code-block:: js

    const button = new Gpio(18, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,     
      edge: Gpio.EITHER_EDGE       
    });

Erstellen Sie ein Schalter-Objekt, um den IO-Port Gpio18 zu steuern, setzen Sie ihn in den Eingabemodus, setzen Sie den Pull-down-Widerstand (niedrig, wenn der Schalter nicht gedrückt ist, hoch, wenn der Schalter gedrückt ist). Und setzen Sie die Interrupt-Funktion, der Modus ist EITHER_EDGE, d.h. sowohl steigende als auch fallende Flanken lösen die Interrupt-Funktion aus.

.. code-block:: js

    button.on('interrupt', (level) => {  
      led.digitalWrite(level);          
    });

Schreiben Sie eine Interrupt-Funktion: Wenn der Schalter gedrückt wird, handelt es sich um eine fallende Flanke, die die Interrupt-Funktion auslöst. Zu diesem Zeitpunkt wird das niedrige Level des Schalter-IO-Ports auf den IO-Port der LED geschrieben, und die LED leuchtet auf.

Beim Loslassen des Schalters handelt es sich um eine steigende Flanke, die die Interrupt-Funktion auslöst. Zu diesem Zeitpunkt wird das hohe Level des Schalter-IO-Ports auf den IO-Port der LED geschrieben, und die LED erlischt.

Phänomen-Bild
--------------------

.. image:: ../img/image153.jpeg
