 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _2.2.2_js:

2.2.2 Thermistor
===================

Introduction
---------------

Tout comme la photo-r√©sistance peut d√©tecter la lumi√®re, la thermistance est un dispositif 
√©lectronique sensible √† la temp√©rature qui peut √™tre utilis√© pour r√©aliser des fonctions de 
contr√¥le de la temp√©rature, comme la cr√©ation d'une alarme thermique.

Required Components
------------------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../img/list_2.2.2_thermistor.png

Il est vraiment pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_thermistor`
        - |link_thermistor_buy|
    *   - :ref:`cpn_adc0834`
        - \-

Schematic Diagram
---------------------

.. image:: ../img/image323.png

.. image:: ../img/image324.png

Experimental Procedures
--------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: ../img/image202.png

**√âtape 2 :** Acc√©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/nodejs/

**√âtape 3 :** Ex√©cutez le code.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo node thermistor.js

Lorsque le code s'ex√©cute, la thermistance d√©tecte la temp√©rature ambiante qui sera 
affich√©e √† l'√©cran une fois le calcul du programme termin√©.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const ADC0834 = require('./adc0834.js').ADC0834;

    exports.ADC0834 = ADC0834;

    const adc = new ADC0834(17, 18, 27);

    setInterval(() => {
      adc.read(0).then((value) => {
        var Vr = 5 * value / 255;
        var Rt = 10000 * Vr / (5 - Vr);
        var temp = 1 / ((Math.log(Rt/10000) / 3950)+(1 / (273.15 + 25)));
        var cel = (temp - 273.15).toFixed(2);
        var Fah = (cel * 1.8 + 32).toFixed(2);
        console.log(`Celsius: ${cel} C  Fahrenheit: ${Fah} F\n`);
      }, (error)=>{
        console.log("Error: " + error);
      });
    }, 1000);

**Explication du Code**

.. code-block:: js

    setInterval(() => {
      adc.read(0).then((value) => {
        var Vr = 5 * value / 255;
        var Rt = 10000 * Vr / (5 - Vr);
        var temp = 1 / ((Math.log(Rt/10000) / 3950)+(1 / (273.15 + 25)));
        var cel = (temp - 273.15).toFixed(2);
        var Fah = (cel * 1.8 + 32).toFixed(2);
        console.log(`Celsius: ${cel} C  Fahrenheit: ${Fah} F\n`);
      }, (error)=>{
        console.log("Error: " + error);
      });
    }, 1000);

Nous pouvons lire la ``value`` de la thermistance gr√¢ce √† l'instruction ``adc.read(0).then((value) => {...})``

.. code-block:: js

    var Vr = 5 * value / 255;
    var Rt = 10000 * Vr / (5 - Vr);
    var temp = 1 / ((Math.log(Rt/10000) / 3950)+(1 / (273.15 + 25)));
    var cel = (temp - 273.15).toFixed(2);
    var Fah = (cel * 1.8 + 32).toFixed(2);
    console.log(`Celsius: ${cel} C  Fahrenheit: ${Fah} F\n`);

Ces op√©rations convertissent la valeur de la thermistance en une valeur de temp√©rature en degr√©s Celsius.

.. code-block:: js

    var Vr = 5 * value / 255;
    var Rt = 10000 * Vr / (5 - Vr);

Ces deux lignes de code sont utilis√©es pour calculer la r√©partition de la tension √† partir des valeurs lues, ce qui donne Rt (r√©sistance de la thermistance).

.. code-block:: js

    var temp = 1 / ((Math.log(Rt/10000) / 3950)+(1 / (273.15 + 25)));  

Ce code permet de substituer Rt dans la formule **TK=1/(ln(RT/RN)/B+1/TN)** pour obtenir la temp√©rature en Kelvin.

.. code-block:: js

    var cel = (temp - 273.15).toFixed(2);

Ce paragraphe permet de convertir la temp√©rature en Kelvin en degr√©s Celsius avec deux d√©cimales.

.. code-block:: js

    var Fah = (cel * 1.8 + 32).toFixed(2);

Ce paragraphe convertit les degr√©s Celsius en degr√©s Fahrenheit avec deux d√©cimales.

.. code-block:: js

    console.log(`Celsius: ${cel} C  Fahrenheit: ${Fah} F\n`);

Affiche les valeurs en Celsius, en Fahrenheit et leurs unit√©s sur le terminal.

Phenomenon Picture
------------------

.. image:: ../img/image203.jpeg
