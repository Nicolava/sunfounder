.. _2.1.2_js:

2.1.2 Mikroschalter
=======================

Einführung
--------------------

In diesem Projekt werden wir lernen, wie man einen Mikroschalter verwendet. Ein Mikroschalter ist ein kleiner, sehr empfindlicher Schalter, der minimalen Druck zum Aktivieren benötigt. Aufgrund ihrer Zuverlässigkeit und Empfindlichkeit werden Mikroschalter häufig als Sicherheitsvorrichtung eingesetzt. 

Sie werden beispielsweise verwendet, um Türen am Schließen zu hindern, wenn sich jemand oder etwas im Weg befindet, und für ähnliche Anwendungen.

Benötigte Komponenten
------------------------------

Für dieses Projekt benötigen wir folgende Komponenten.

.. image:: ../img/2.1.2component.png

Es ist definitiv praktisch, ein ganzes Kit zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie können sie auch einzeln über die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_micro_switch`
        - \-
    *   - :ref:`cpn_capacitor`
        - |link_capacitor_buy|

Schaltplan
-----------------

Verbinden Sie den linken Pin des Mikroschalters mit GPIO17 und zwei LEDs mit den Pins GPIO22 und GPIO27. Wenn Sie dann den Bewegungsarm des Mikroschalters drücken und loslassen, leuchten die beiden LEDs abwechselnd auf.

.. image:: ../img/image305.png

.. image:: ../img/micro_Schematic.png

Experimentelle Verfahren
---------------------------

**Schritt 1:** Bauen Sie den Schaltkreis auf.

.. image:: ../img/2.1.4fritzing.png

**Schritt 2:** Navigieren Sie zum Ordner des Codes.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**Schritt 3:** Starten Sie den Code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node micro_switch.js

Während der Code läuft, drücken Sie den Mikroschalter. 
Dann leuchtet die gelbe LED auf; 
lassen Sie den Bewegungsarm los, schaltet sich die rote LED ein.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio; 

    const led1 = new Gpio(22, {mode: Gpio.OUTPUT});
    const led2 = new Gpio(27, {mode: Gpio.OUTPUT});

    const microSwitch = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE       
    });

    microSwitch.on('interrupt', (level) => {  
        led1.digitalWrite(level);   
        led2.digitalWrite(!level);       
    });


**Code-Erklärung**

.. code-block:: js

    const Gpio = require('pigpio').Gpio; 

    const led1 = new Gpio(22, {mode: Gpio.OUTPUT});
    const led2 = new Gpio(27, {mode: Gpio.OUTPUT});

    const microSwitch = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE       
    });

Importieren Sie das Modul ``pigpio`` und erstellen Sie drei Objekte: led1, led2 und micro.
Durch das Auslesen des Pegels des micro IO-Ports werden das Ein- und Ausschalten von led1 und led2 gesteuert.

.. code-block:: js

    microSwitch.on('interrupt', (level) => {  
        led1.digitalWrite(level);   
        led2.digitalWrite(!level);       
    });

Wenn sich der Pegel des ausgelesenen micro IO-Ports ändert, 
wird der gleiche Pegel an led1 und der entgegengesetzte Pegel an led2 geschrieben.

Phänomen-Bild
--------------------

.. image:: ../img/2.1.2micro_switch.JPG

