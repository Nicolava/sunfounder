 
.. _1.1.3_js:

1.1.3 Graphique à Barres LED
=================================

Introduction
----------------

Dans ce projet, nous allumons séquentiellement les lumières sur le graphique à barres LED.

Composants Requis
--------------------------------

Dans ce projet, nous avons besoin des composants suivants. 

.. image:: img/list_led_bar.png

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ÉLÉMENTS DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez également les acheter séparément aux liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DU COMPOSANT
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_bar_graph`
        - \-

Schéma de Connexion
-------------------------

.. image:: img/schematic_led_bar.png

Procédures Expérimentales
------------------------------

**Étape 1** : Construisez le circuit.

.. note::
    Faites attention à la direction lors de la connexion. Si vous le connectez à l'envers, il ne s'allumera pas.

.. image:: img/image66.png
**Étape 2** : Allez dans le dossier du code.

.. raw:: html

    <run></run>

.. code-block:: 

    cd ~/raphael-kit/nodejs/ 

**Étape 3** : Compilez le code.

.. raw:: html

    <run></run>

.. code-block:: 

    sudo node led_bar_graph.js

Après l'exécution du code, vous verrez les LED sur le graphique à barres LED s'allumer et s'éteindre régulièrement.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    var pins = [17, 18, 27, 22, 23, 24, 25, 2, 3, 8];
    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);
**Explication du code**

.. code-block:: js

    var pins = [17,18,27,22,23,24,25,2,3,8];

Comme le graphique à barres LED utilisera plusieurs broches, nous créons un tableau constant ``pins`` pour les stocker en lot.

.. code-block:: js

    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

Instancier ces broches comme objets leds avec une boucle for.

.. code-block:: js

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

Implémenter une fonction ``oddLedBarGraph()`` pour faire s'allumer les LED sur les chiffres impairs du graphique à barres LED.

.. code-block:: js

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

Implémenter une fonction ``evenLedBarGraph()`` pour faire s'allumer les LED sur les chiffres pairs du graphique à barres LED.

.. code-block:: js

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);

L'état de fonctionnement de la LED est commuté toutes les 500 ms.

Image du phénomène
---------------------------

.. image:: img/image67.jpeg
