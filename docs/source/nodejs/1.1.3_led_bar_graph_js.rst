.. note::

    ¬°Hola, bienvenido a la comunidad de entusiastas de SunFounder Raspberry Pi, Arduino y ESP32 en Facebook! Sum√©rgete m√°s profundamente en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte experto**: Resuelve problemas postventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Vistas previas exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y avances.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo!

.. _1.1.3_js:

1.1.3 Gr√°fico de Barras de LED
===================================

Introducci√≥n
----------------

En este proyecto, iluminaremos secuencialmente las luces en el Gr√°fico de Barras de LED.

Componentes Necesarios
--------------------------------

En este proyecto, necesitamos los siguientes componentes. 

.. image:: img/list_led_bar.png

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_bar_graph`
        - \-

Diagrama Esquem√°tico
-------------------------

.. image:: img/schematic_led_bar.png

Procedimientos Experimentales
------------------------------

**Paso 1**: Construye el circuito.

.. note::
    Presta atenci√≥n a la direcci√≥n al conectar. Si lo conectas al rev√©s, no se encender√°.

.. image:: img/image66.png

**Paso 2**: Ve a la carpeta del c√≥digo.

.. raw:: html

    <run></run>

.. code-block:: 

    cd ~/raphael-kit/nodejs/ 

**Paso 3**: Compila el c√≥digo.

.. raw:: html

    <run></run>

.. code-block:: 

    sudo node led_bar_graph.js

Despu√©s de ejecutar el c√≥digo, ver√°s que los LED en el gr√°fico de barras de LED se encienden y apagan regularmente.

**C√≥digo**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    var pins = [17, 18, 27, 22, 23, 24, 25, 2, 3, 8];
    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);
  

**Explicaci√≥n del C√≥digo**

.. code-block:: js

    var pins = [17,18,27,22,23,24,25,2,3,8];

Debido a que el gr√°fico de barras de LED utilizar√° m√∫ltiples pines, creamos una constante array ``pins`` para almacenarlos en lotes.

.. code-block:: js

    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

Instancia estos pines como objetos leds con un bucle for.


.. code-block:: js

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

Implementa una funci√≥n ``oddLedBarGraph()`` para hacer que los LEDs en los 
d√≠gitos impares del gr√°fico de barras de LED se iluminen.    

.. code-block:: js

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

Implementa una funci√≥n ``evenLedBarGraph()`` para hacer que los LEDs en los 
d√≠gitos pares del gr√°fico de barras de LED se iluminen. 

.. code-block:: js

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);

El estado de funcionamiento del LED se cambia cada 500ms.

Imagen del Fen√≥meno
---------------------------

.. image:: img/image67.jpeg



