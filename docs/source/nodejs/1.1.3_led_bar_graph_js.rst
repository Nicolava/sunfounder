.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _1.1.3_js:

1.1.3 LED-Lichtleiste
======================

Einf√ºhrung
-------------

In diesem Projekt beleuchten wir nacheinander die Lichter auf der LED-Lichtleiste.

Ben√∂tigte Komponenten
------------------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten. 

.. image:: img/list_led_bar.png

Es ist definitiv praktisch, ein ganzes Set zu kaufen, hier ist der Link: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie k√∂nnen diese auch einzeln √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_bar_graph`
        - \-

Schaltplan
-------------------------

.. image:: img/schematic_led_bar.png

Experimentelle Verfahren
------------------------------

**Schritt 1**: Bauen Sie den Schaltkreis.

.. note::
    Achten Sie beim Verbinden auf die Richtung. Wenn Sie es verkehrt herum verbinden, wird es nicht leuchten.

.. image:: img/image66.png

**Schritt 2**: Wechseln Sie in den Ordner mit dem Code.

.. raw:: html

    <run></run>

.. code-block:: 

    cd ~/raphael-kit/nodejs/ 

**Schritt 3**: Kompilieren Sie den Code.

.. raw:: html

    <run></run>

.. code-block:: 

    sudo node led_bar_graph.js

Nachdem der Code ausgef√ºhrt wurde, sehen Sie, dass die LEDs auf der LED-Lichtleiste regelm√§√üig ein- und ausgeschaltet werden.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    var pins = [17, 18, 27, 22, 23, 24, 25, 2, 3, 8];
    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);
  

**Code-Erkl√§rung**

.. code-block:: js

    var pins = [17,18,27,22,23,24,25,2,3,8];

Da die LED-Lichtleiste mehrere Pins verwendet, erstellen wir ein konstantes Array ``pins``, um sie in Chargen zu speichern.

.. code-block:: js

    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

Mit einer for-Schleife werden diese Pins als leds-Objekte instanziiert.

.. code-block:: js

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

Implementiere eine Funktion ``oddLedBarGraph()``, um die LEDs an den ungeraden Positionen der LED-Lichtleiste aufleuchten zu lassen.

.. code-block:: js

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

Implementiere eine Funktion ``evenLedBarGraph()``, um die LEDs an den geraden Positionen der LED-Lichtleiste aufleuchten zu lassen.

.. code-block:: js

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);

Der Arbeitszustand der LED wird alle 500ms umgeschaltet.

Ph√§nomen-Bild
---------------------------

.. image:: img/image67.jpeg



