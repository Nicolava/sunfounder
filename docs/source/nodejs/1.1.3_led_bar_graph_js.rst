.. _1.1.3_js:

1.1.3 LEDバーグラフ
======================

はじめに
-------------

このプロジェクトでは、LEDバーグラフの光を順番に点灯させます。

必要な部品
------------------------------

このプロジェクトでは、以下の部品が必要です。

.. image:: img/list_led_bar.png

一式を購入するのは非常に便利です。リンクはこちら：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前	
        - このキットのアイテム
        - リンク
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

以下のリンクから別々に購入することもできます。

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - コンポーネントの紹介
        - 購入リンク

    *   - :ref:`GPIO拡張ボード`
        - |link_gpio_board_buy|
    *   - :ref:`ブレッドボード`
        - |link_breadboard_buy|
    *   - :ref:`ジャンパーワイヤー`
        - |link_wires_buy|
    *   - :ref:`抵抗器`
        - |link_resistor_buy|
    *   - :ref:`LEDバーグラフ`
        - \-

回路図
-------------------------

.. image:: img/schematic_led_bar.png

実験手順
------------------------------

**ステップ1**：回路を組み立てる。

.. note::
    接続するときの方向に注意してください。逆に接続すると、点灯しません。

.. image:: img/image66.png

**ステップ2**：コードのフォルダに移動する。

.. raw:: html

    <run></run>

.. code-block:: 

    cd ~/raphael-kit/nodejs/ 

**ステップ3**：コードをコンパイルする。

.. raw:: html

    <run></run>

.. code-block:: 

    sudo node led_bar_graph.js

コードが実行された後、LEDバーのLEDが定期的に点灯と消灯を繰り返すのがわかるでしょう。

**コード**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    var pins = [17, 18, 27, 22, 23, 24, 25, 2, 3, 8];
    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);

**コード説明**

.. code-block:: js

    var pins = [17,18,27,22,23,24,25,2,3,8];

LEDバーグラフは複数のピンを使用するため、これらのピンを一括で保存するための定数配列 ``pins`` を作成します。

.. code-block:: js

    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

forループを使用して、これらのピンをledsオブジェクトとしてインスタンス化します。


.. code-block:: js

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

LEDバーグラフの奇数桁のLEDを点灯させる ``oddLedBarGraph()`` 関数を実装します。

.. code-block:: js

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

LEDバーグラフの偶数桁のLEDを点灯させる ``evenLedBarGraph()`` 関数を実装します。

.. code-block:: js

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);

LEDの作動状態は500msごとに切り替えられます。

現象の画像
---------------------------

.. image:: img/image67.jpeg



