.. note::

    Hola, ¬°bienvenido a la Comunidad de Entusiastas de SunFounder Raspberry Pi, Arduino y ESP32 en Facebook! Sum√©rgete m√°s en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte Experto**: Resuelve problemas post-venta y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprender y Compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Preestrenos Exclusivos**: Obt√©n acceso anticipado a nuevos anuncios de productos y adelantos.
    - **Descuentos Especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s nuevos.
    - **Promociones y Sorteos Festivos**: Participa en sorteos y promociones de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo.

.. _3.1.5_c_pi5:

3.1.5 Indicador de Bater√≠a
==================================

Introducci√≥n
-------------------

En este proyecto, haremos un dispositivo indicador de bater√≠a que puede mostrar visualmente 
el nivel de la bater√≠a en el LED Bargraph.

Componentes Necesarios
----------------------------------

En este proyecto, necesitamos los siguientes componentes.

.. image:: ../img/list_Battery_Indicator.png
    :align: center

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ART√çCULOS EN ESTE KIT
        - ENLACE
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DE COMPONENTES
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_bar_graph`
        - \-
    *   - :ref:`cpn_adc0834`
        - \-

Diagrama Esquem√°tico
-------------------------

============== ======== ======== ===
Nombre T-Board F√≠sica   wiringPi BCM
GPIO17         Pin 11   0        17
GPIO18         Pin 12   1        18
GPIO27         Pin 13   2        27
GPIO25         Pin 22   6        25
GPIO12         Pin 32   26       12
GPIO16         Pin 36   27       16
GPIO20         Pin 38   28       20
GPIO21         Pin 40   29       21
GPIO5          Pin 29   21       5
GPIO6          Pin 31   22       6
GPIO13         Pin 33   23       13
GPIO19         Pin 35   24       19
GPIO26         Pin 37   25       26
============== ======== ======== ===

.. image:: ../img/Schematic_three_one5.png
   :align: center

Procedimientos Experimentales
---------------------------------

**Paso 1:** Construir el circuito.

.. image:: ../img/image248.png

**Paso 2:** Ir a la carpeta del c√≥digo.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/c/3.1.5/

**Paso 3:** Compilar el c√≥digo.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.5_BatteryIndicator.c -lwiringPi

**Paso 4:** Ejecutar el archivo ejecutable.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./a.out

Despu√©s de ejecutar el programa, conecta un cable de salida al pin 3 de ADC0834 y el GND, 
y luego con√©ctalos a los dos polos de una bater√≠a por separado. Podr√°s ver los LED 
correspondientes en el Bargraph encendidos, mostrando el nivel de bater√≠a (rango de medici√≥n: 0-5V).

.. note::

    Si no funciona despu√©s de ejecutar el programa, o aparece un mensaje de error: \"wiringPi.h: No such file or directory\", por favor consulta :ref:`install_wiringpi`.

**Explicaci√≥n del C√≥digo**

.. code-block:: c

    void¬†LedBarGraph(int¬†value){
    ¬†¬†¬†¬†for(int¬†i=0;i<10;i++){
            digitalWrite(pins[i],HIGH);
        }
    ¬†¬†¬†¬†for(int¬†i=0;i<value;i++){
            digitalWrite(pins[i],LOW);
        }
    }

Esta funci√≥n controla el encendido o apagado de los 10 LEDs en el Bargraph. 
Primero, apagamos estos 10 LEDs d√°ndoles niveles altos, luego decidimos cu√°ntos LEDs 
encender cambiando el valor anal√≥gico recibido.

.. code-block:: c

    int¬†main(void)
    {
    ¬†¬†¬†¬†uchar¬†analogVal;
    ¬†¬†¬†¬†if(wiringPiSetup()¬†==¬†-1){¬†//when¬†initialize¬†wiring¬†failed,print¬†messageto¬†screen
    ¬†¬†¬†¬†¬†¬†¬†¬†printf("setup¬†wiringPi¬†failed¬†!");
    ¬†¬†¬†¬†¬†¬†¬†¬†return¬†1;
        }
    ¬†¬†¬†¬†pinMode(ADC_CS,¬†¬†OUTPUT);
    ¬†¬†¬†¬†pinMode(ADC_CLK,¬†OUTPUT);
    ¬†¬†¬†¬†for(int¬†i=0;i<10;i++){¬†¬†¬†¬†¬†¬†¬†//make¬†led¬†pins'¬†mode¬†is¬†output
    ¬†¬†¬†¬†¬†¬†¬†¬†pinMode(pins[i],¬†OUTPUT);
            digitalWrite(pins[i],HIGH);
        }
        while(1){
    ¬†¬†¬†¬†¬†¬†¬†¬†analogVal¬†=¬†get_ADC_Result(0);
            LedBarGraph(analogVal/25);
            delay(100);
        }
    ¬†¬†¬†¬†return¬†0;
    }

analogVal produce valores (**0-255**) con voltajes variables (**0-5V**), por ejemplo, 
si se detectan 3V en una bater√≠a, el valor correspondiente **152** se muestra en el volt√≠metro.

Los **10** LEDs en el Bargraph se utilizan para mostrar las lecturas de **analogVal**. 
255/10=25, por lo que cada **25** que aumenta el valor anal√≥gico, se enciende un LED m√°s, 
por ejemplo, si ‚ÄúanalogVal=150 (aproximadamente 3V), hay 6 LEDs encendidos.‚Äù

**Foto del Fen√≥meno**

.. image:: ../img/image249.jpeg
   :align: center
