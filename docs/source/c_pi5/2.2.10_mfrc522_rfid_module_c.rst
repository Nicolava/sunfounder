.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _2.2.10_c_pi5:

2.2.10 MFRC522 RFID Modul
================================

Einf√ºhrung
---------------

Radiofrequenzidentifikation (RFID) bezeichnet Technologien, die
die drahtlose Kommunikation zwischen einem Objekt (oder Tag) und einem Abfrageger√§t (oder Leseger√§t) nutzen, um solche Objekte automatisch zu verfolgen und zu identifizieren.

Einige der gebr√§uchlichsten Anwendungen dieser Technologie sind Einzelhandels-Lieferketten, milit√§rische Lieferketten, automatisierte Zahlungsmethoden, Gep√§ckverfolgung und -verwaltung, Dokumentenverfolgung und pharmazeutisches Management, um nur einige zu nennen.

In diesem Projekt verwenden wir RFID zum Lesen und Schreiben.

Ben√∂tigte Komponenten
------------------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

.. image:: ../img/list_2.2.7.png

Es ist sicherlich praktisch, ein ganzes Kit zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie k√∂nnen sie auch einzeln √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_mfrc522`
        - |link_mfrc522_rfid_buy|

Schaltplan
-----------------

.. image:: ../img/image331.png

Experimentelle Verfahren
---------------------------

**Schritt 1:** Bauen Sie den Schaltkreis.

.. image:: ../img/image232.png

**Schritt 2:** Richten Sie SPI ein (verweisen Sie auf :ref:`spi_configuration` f√ºr weitere Details. Wenn Sie SPI bereits eingerichtet haben, √ºberspringen Sie diesen Schritt.)

**Schritt 3:** Navigieren Sie zum Verzeichnis des Codes.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/c/2.2.10/

**Schritt 4:** Kompilieren Sie den Code.

.. raw:: html

   <run></run>

.. code-block:: 

    make read
    make write

**Schritt 5:** Nachdem Sie ``./write`` ausgef√ºhrt haben, geben Sie die Informationen ein, z.B. den Namen der Person, und legen Sie dann den Tag oder die Karte auf das MRC522-Modul und warten Sie, bis das Schreiben abgeschlossen ist.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./write

**Schritt 6:** F√ºhren Sie jetzt ``./read`` aus, um die Informationen des Tags oder der Karte zu lesen, die Sie geschrieben haben.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./read

.. note::

    Wenn es nach der Ausf√ºhrung nicht funktioniert oder die Fehlermeldung "wiringPi.h: No such file or directory" angezeigt wird, verweisen Sie bitte auf :ref:`install_wiringpi`.

**Code-Erkl√§rung**

.. code-block:: c

    InitRc522();

Diese Funktion dient zur Initialisierung des RFID RC522-Moduls.

.. code-block:: c

    uint8_t read_card_data();

Diese Funktion dient zum Lesen der Kartendaten. Wenn das Lesen erfolgreich ist, wird "1" zur√ºckgegeben.

.. code-block:: c

    uint8_t write_card_data(uint8_t *data);

Diese Funktion dient zum Schreiben der Kartendaten und gibt "1" zur√ºck, wenn das Schreiben erfolgreich ist. ``*data`` sind die Informationen, die auf die Karte geschrieben werden.

Ph√§nomen-Bild
------------------

.. image:: ../img/image233.jpeg