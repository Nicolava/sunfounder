.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **ExpertenunterstÃ¼tzung**: LÃ¶sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre FÃ¤higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie frÃ¼hzeitigen Zugang zu neuen ProduktankÃ¼ndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: GenieÃŸen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    ðŸ‘‰ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _3.1.1_c:

3.1.1 ZÃ¤hlgerÃ¤t
============================

EinfÃ¼hrung
-----------------

Hier erstellen wir ein ZÃ¤hlsystem mit Nummernanzeige, bestehend aus einem 
PIR-Sensor und einer 4-stelligen Segmentanzeige. Wenn der PIR erkennt, dass 
jemand vorbeigeht, wird die Zahl auf der 4-stelligen Segmentanzeige um 1 erhÃ¶ht. 
Sie kÃ¶nnen diesen ZÃ¤hler verwenden, um die Anzahl der Personen zu zÃ¤hlen, die 
durch den Durchgang gehen.

BenÃ¶tigte Komponenten
------------------------------

FÃ¼r dieses Projekt benÃ¶tigen wir die folgenden Komponenten.

.. image:: ../img/list_Counting_Device1.png
    :align: center

.. image:: ../img/list_Counting_Device2.png
    :align: center

Es ist definitiv praktisch, ein ganzes Kit zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie kÃ¶nnen sie auch einzeln Ã¼ber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENEINFÃœHRUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_4_digit`
        - \-
    *   - :ref:`cpn_74hc595`
        - |link_74hc595_buy|
    *   - :ref:`cpn_pir`
        - \-

Schaltplan
----------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
SPIMOSI      Pin 19   12       10
GPIO18       Pin 12   1        18
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO26       Pin 37   25       26
============ ======== ======== ===

.. image:: ../img/Schematic_three_one1.png
   :align: center

Experimentelle Verfahren
-----------------------------

**Schritt 1**: Bauen Sie die Schaltung.

.. image:: ../img/image235.png

**Schritt 2**: Navigieren Sie zum Ordner des Codes.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/3.1.1/

**Schritt 3**: Kompilieren Sie den Code.

.. raw:: html

   <run></run>

.. code-block::

    gcc 3.1.1_CountingDevice.c -lwiringPi

**Schritt 4**: FÃ¼hren Sie die ausfÃ¼hrbare Datei aus.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Nachdem der Code ausgefÃ¼hrt wurde und der PIR erkennt, dass jemand vorbeigeht, 
wird die Zahl auf der 4-stelligen Segmentanzeige um 1 erhÃ¶ht.

Am PIR-Modul befinden sich zwei Potentiometer: eines zur Einstellung der Empfindlichkeit und das andere zur Einstellung der Erfassungsentfernung. Damit das PIR-Modul besser funktioniert, mÃ¼ssen Sie beide im Uhrzeigersinn bis zum Ende drehen.

.. image:: ../img/PIR_TTE.png
    :width: 400
    :align: center

.. note::

    Wenn es nach dem AusfÃ¼hren nicht funktioniert oder eine Fehlermeldung erscheint: \"wiringPi.h: Datei oder Verzeichnis nicht gefunden\", lesen Sie bitte :ref:`install_wiringpi`.

**Code-ErklÃ¤rung**

.. code-block:: c

    voidÂ display()
    {
    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(0);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10]);

    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(1);
    Â Â Â Â hc595_shift(number[counterÂ %Â 100Â /Â 10]);

    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(2);
    Â Â Â Â hc595_shift(number[counterÂ %Â 1000Â /Â 100]);
    Â 
    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(3);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10000Â /Â 1000]);
    }

Zuerst starten Sie die vierte Segmentanzeige und schreiben die einstellige Zahl. 
Dann starten Sie die dritte Segmentanzeige und geben die Zehnerstelle ein; 
danach starten Sie nacheinander die zweite und die erste Segmentanzeige und 
geben die Hundert- und Tausenderstellen ein. Da die Aktualisierungsgeschwindigkeit 
sehr schnell ist, sehen wir eine vollstÃ¤ndige vierstellige Anzeige.

.. code-block:: c

    voidÂ loop(){
    Â Â Â Â intÂ currentStateÂ =0;
    Â Â Â Â intÂ lastState=0;
    Â Â Â Â while(1){
    Â Â Â Â Â Â Â Â display();
    Â Â Â Â Â Â Â Â currentState=digitalRead(sensorPin);
    Â Â Â Â Â Â Â Â if((currentState==0)&&(lastState==1)){
    Â Â Â Â Â Â Â Â Â Â Â Â counterÂ +=1;
    Â Â Â Â Â Â Â Â }
    Â Â Â Â Â Â Â Â lastState=currentState;
    Â Â Â Â }
    }

Dies ist die Hauptfunktion: Sie zeigt die Zahl auf der 4-stelligen Segmentanzeige 
an und liest den PIR-Wert. Wenn der PIR erkennt, dass jemand vorbeigeht, wird die 
Zahl auf der 4-stelligen Segmentanzeige um 1 erhÃ¶ht.

PhÃ¤nomen-Bild
-------------------------

.. image:: ../img/image236.jpeg
   :align: center
