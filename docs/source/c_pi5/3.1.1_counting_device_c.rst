.. note::

    Ciao, benvenuto nella community SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts su Facebook! Immergiti piÃ¹ a fondo in Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **PerchÃ© unirti?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra community e del nostro team.
    - **Impara e condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato a nuovi annunci di prodotti e anteprime esclusive.
    - **Sconti speciali**: Goditi sconti esclusivi sui nostri prodotti piÃ¹ recenti.
    - **Promozioni festive e omaggi**: Partecipa a concorsi e promozioni festive.

    ðŸ‘‰ Pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _3.1.1_c_pi5:

3.1.1 Dispositivo Contatore
==============================

Introduzione
-----------------

Qui creeremo un sistema contatore visualizzatore di numeri, composto da un 
sensore PIR e un display a 4 cifre. Quando il sensore PIR rileva il passaggio 
di una persona, il numero sul display a 4 cifre aumenterÃ  di 1. Puoi utilizzare 
questo contatore per contare il numero di persone che attraversano il passaggio.


Componenti necessari
-------------------------

In questo progetto, abbiamo bisogno dei seguenti componenti.

.. image:: ../img/list_Counting_Device1.png
    :align: center

.. image:: ../img/list_Counting_Device2.png
    :align: center

Ãˆ sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link sottostanti.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE COMPONENTE
        - LINK PER L'ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_4_digit`
        - \-
    *   - :ref:`cpn_74hc595`
        - |link_74hc595_buy|
    *   - :ref:`cpn_pir`
        - \-

Schema elettrico
----------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
SPIMOSI      Pin 19   12       10
GPIO18       Pin 12   1        18
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO26       Pin 37   25       26
============ ======== ======== ===

.. image:: ../img/Schematic_three_one1.png
   :align: center

Procedure sperimentali
---------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/image235.png

**Passo 2:** Vai alla cartella del codice.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/c/3.1.1/

**Passo 3:** Compila il codice.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.1_CountingDevice.c -lwiringPi

**Passo 4:** Esegui il file eseguibile.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./a.out

Una volta eseguito il codice, quando il sensore PIR rileva il passaggio 
di una persona, il numero sul display a 4 cifre aumenterÃ  di 1.

Ci sono due potenziometri sul modulo PIR: uno per regolare la sensibilitÃ  e 
l'altro per regolare la distanza di rilevamento. Per far funzionare al meglio 
il modulo PIR, Ã¨ necessario ruotarli entrambi in senso antiorario fino alla fine.

.. image:: ../img/PIR_TTE.png
    :width: 400
    :align: center

.. note::

    Se non funziona dopo l'esecuzione o compare un messaggio di errore: \"wiringPi.h: No such file or directory\", consulta :ref:`install_wiringpi`.


**Spiegazione del Codice**


.. code-block:: c

    voidÂ display()
    {
    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(0);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10]);

    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(1);
    Â Â Â Â hc595_shift(number[counterÂ %Â 100Â /Â 10]);

    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(2);
    Â Â Â Â hc595_shift(number[counterÂ %Â 1000Â /Â 100]);

    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(3);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10000Â /Â 1000]);
    }

Per prima cosa, avvia il quarto segmento del display e scrivi il numero singolo. 
Poi avvia il terzo segmento del display e inserisci la cifra delle decine; dopo 
di ciÃ², avvia rispettivamente il secondo e il primo segmento del display e scrivi 
le centinaia e le migliaia. Grazie alla velocitÃ  di aggiornamento molto rapida, 
vediamo un display completo a quattro cifre.

.. code-block:: c

    voidÂ loop(){
    Â Â Â Â intÂ currentStateÂ =0;
    Â Â Â Â intÂ lastState=0;
    Â Â Â Â while(1){
    Â Â Â Â Â Â Â Â display();
    Â Â Â Â Â Â Â Â currentState=digitalRead(sensorPin);
    Â Â Â Â Â Â Â Â if((currentState==0)&&(lastState==1)){
    Â Â Â Â Â Â Â Â Â Â Â Â counterÂ +=1;
    Â Â Â Â Â Â Â Â }
    Â Â Â Â Â Â Â Â lastState=currentState;
    Â Â Â Â }
    }

Questa Ã¨ la funzione principale: mostra il numero sul display a 4 cifre e leggi 
il valore del PIR. Quando il sensore PIR rileva il passaggio di una persona, il 
numero sul display a 4 cifre aumenterÃ  di 1.

Immagine del Fenomeno
-------------------------

.. image:: ../img/image236.jpeg
   :align: center
