.. note::

    Ciao, benvenuto nella Community di appassionati di SunFounder Raspberry Pi & Arduino & ESP32 su Facebook! Approfondisci Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra comunit√† e del nostro team.
    - **Impara e condividi**: Scambia consigli e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato agli annunci di nuovi prodotti e alle anteprime.
    - **Sconti speciali**: Approfitta di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e omaggi**: Partecipa a omaggi e promozioni festive.

    üëâ Pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _2.1.2_c_pi5:

2.1.2 Microinterruttore
==============================

Introduzione
--------------------

In questo progetto, impareremo come utilizzare un microinterruttore. Un microinterruttore √® un piccolo interruttore molto sensibile che richiede una minima compressione per essere attivato. Grazie alla loro affidabilit√† e sensibilit√†, i microinterruttori vengono spesso utilizzati come dispositivi di sicurezza.

Sono impiegati per impedire la chiusura delle porte se qualcosa o qualcuno √® di mezzo e in altre applicazioni simili.

Componenti necessari
------------------------------

In questo progetto, abbiamo bisogno dei seguenti componenti.

.. image:: ../img/2.1.2component.png


√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - COMPONENTI IN QUESTO KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link sottostanti.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE COMPONENTI
        - LINK PER L'ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_micro_switch`
        - \-
    *   - :ref:`cpn_capacitor`
        - |link_capacitor_buy|

Schema di Collegamento
------------------------------

Collega il pin sinistro del microinterruttore al GPIO17 e due LED rispettivamente ai 
pin GPIO22 e GPIO27. Premendo e rilasciando il braccio mobile del microinterruttore, 
vedrai i due LED accendersi alternativamente.

.. image:: ../img/image305.png


.. image:: ../img/micro_Schematic.png


Procedure Sperimentali
--------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/2.1.4fritzing.png

**Passo 2:** Vai nella cartella del codice.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/2.1.2

**Passo 3:** Compila.

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.1.2_MicroSwitch.c -lwiringPi 

**Passo 4:** Esegui il file eseguibile.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Durante l'esecuzione del codice, premi il microinterruttore, il LED giallo si accender√†; rilasciando il braccio mobile, si accender√† il LED rosso.

.. note::

    Se non funziona dopo l'esecuzione o compare un messaggio di errore: \"wiringPi.h: No such file or directory\", consulta :ref:`install_wiringpi`.

**Codice**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define microPin		0
    #define led1			3
    #define led2 			2

    int main(void)
    {
        // Se l'inizializzazione di wiring fallisce, stampa un messaggio a schermo
        if(wiringPiSetup() == -1){
            printf("setup wiringPi failed !");
            return 1; 
        }
        
        pinMode(microPin, INPUT);
        pinMode(led1, OUTPUT);
        pinMode(led2, OUTPUT);
        
        while(1){
            // microinterruttore alto, led1 acceso
            if(digitalRead(microPin) == 1){
                digitalWrite(led1, LOW);
                digitalWrite(led2, HIGH);
                printf("LED1 on\n");
            }
            // microinterruttore basso, led2 acceso
            if(digitalRead(microPin) == 0){
                digitalWrite(led2, LOW);
                digitalWrite(led1, HIGH);
                printf(".....LED2 on\n");
            }
            delay(500);
        }

        return 0;
    }

**Spiegazione del Codice**

.. code-block:: c

    if(digitalRead(slidePin) == 1){
                digitalWrite(led1, LOW);
                digitalWrite(led2, HIGH);
                printf("LED1 on\n");
        }

Quando il braccio mobile del microinterruttore viene rilasciato, il pin sinistro √® collegato al pin destro; in questo momento, verr√† letto un livello alto sul GPIO17 e il LED1 si accender√† mentre il LED2 si spegner√†.


.. code-block:: c

    if(digitalRead(slidePin) == 0){
                digitalWrite(led2, LOW);
                digitalWrite(led1, HIGH);
                printf(".....LED2 on\n");
            }

Quando il braccio mobile viene premuto, il pin sinistro e il pin centrale sono collegati. A questo punto verr√† letto un livello basso sul GPIO17 e si accender√† il LED2, spegnendo il LED1.


Immagine del Fenomeno
-------------------------

.. image:: ../img/2.1.2micro_switch.JPG
