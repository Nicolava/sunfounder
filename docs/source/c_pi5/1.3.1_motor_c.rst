.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _1.3.1_c_pi5:

1.3.1 Motor
=================

Einf√ºhrung
-----------------

In diesem Projekt werden wir lernen, wie man einen L293D verwendet, um einen Gleichstrommotor anzutreiben und ihn im Uhrzeigersinn und gegen den Uhrzeigersinn drehen zu lassen. Da der Gleichstrommotor einen gr√∂√üeren Strom ben√∂tigt, verwenden wir aus Sicherheitsgr√ºnden das Netzteilmodul, um die Motoren zu versorgen.

Erforderliche Komponenten
------------------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

.. image:: ../img/list_1.3.1.png

Es ist definitiv praktisch, ein ganzes Kit zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie k√∂nnen sie auch einzeln √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_power_module`
        - \-
    *   - :ref:`cpn_l293d`
        - \-
    *   - :ref:`cpn_motor`
        - |link_motor_buy|

Schaltplan
------------------

Stecken Sie das Netzteilmodul in das Breadboard und setzen Sie die Jumperkappe auf den 5V-Pin, dann gibt es eine Spannung von 5V aus. Verbinden Sie Pin 1 des L293D mit GPIO22 und setzen Sie ihn auf ein hohes Niveau. Verbinden Sie Pin2 mit GPIO27 und Pin7 mit GPIO17, setzen Sie dann einen Pin hoch und den anderen niedrig. So k√∂nnen Sie die Drehrichtung des Motors √§ndern.

.. image:: ../img/image336.png

**Versuchsverfahren**

**Schritt 1:** Bauen Sie den Schaltkreis.

.. image:: ../img/1.3.1.png

.. note::
    Das Netzteilmodul kann mit dem 9V-Batterieclip aus dem Kit eine 9V-Batterie versorgen. Setzen Sie die Jumperkappe des Netzteilmoduls auf die 5V-Busstreifen des Breadboards.

.. image:: ../img/image118.jpeg

**Schritt 2**: Navigieren Sie zum Ordner des Codes.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/1.3.1/

**Schritt 3**: Kompilieren.

.. raw:: html

   <run></run>

.. code-block::

    gcc 1.3.1_Motor.c -lwiringPi

**Schritt 4**: F√ºhren Sie die oben erstellte ausf√ºhrbare Datei aus.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Wenn der Code l√§uft, dreht sich der Motor zuerst 5s lang im Uhrzeigersinn, stoppt dann f√ºr 5s und dreht sich anschlie√üend 5s lang gegen den Uhrzeigersinn. Danach stoppt der Motor f√ºr 5s. Diese Abfolge von Aktionen wird wiederholt ausgef√ºhrt.

.. note::

    Wenn es nach dem Ausf√ºhren nicht funktioniert oder ein Fehlerhinweis erscheint: \"wiringPi.h: No such file or directory\", bitte beziehen Sie sich auf :ref:`install_wiringpi`.

**Code**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define MotorPin1       0
    #define MotorPin2       2
    #define MotorEnable     3

    int main(void){
        int i;
        if(wiringPiSetup() == -1){ //when initialize wiring failed, print messageto screen
            printf("setup wiringPi failed !");
            return 1;
        }
        
        pinMode(MotorPin1, OUTPUT);
        pinMode(MotorPin2, OUTPUT);
        pinMode(MotorEnable, OUTPUT);
        while(1){
            printf("Clockwise\n");
            digitalWrite(MotorEnable, HIGH);
            digitalWrite(MotorPin1, HIGH);
            digitalWrite(MotorPin2, LOW);
            for(i=0;i<3;i++){
                delay(1000);
            }

            printf("Stop\n");
            digitalWrite(MotorEnable, LOW);
            for(i=0;i<3;i++){
                delay(1000);
            }

            printf("Anti-clockwise\n");
            digitalWrite(MotorEnable, HIGH);
            digitalWrite(MotorPin1, LOW);
            digitalWrite(MotorPin2, HIGH);
            for(i=0;i<3;i++){
                delay(1000);
            }

            printf("Stop\n");
            digitalWrite(MotorEnable, LOW);
            for(i=0;i<3;i++){
                delay(1000);
            }
        }
        return 0;
    }

**Code-Erkl√§rung**

.. code-block:: c

    digitalWrite(MotorEnable, HIGH);

Aktivieren des L239D.

.. code-block:: c

    digitalWrite(MotorPin1, HIGH);
    digitalWrite(MotorPin2, LOW);

Legen Sie ein hohes Niveau f√ºr 2A(Pin 7) fest; da 1,2EN(Pin 1) auf 
hohem Niveau ist, wird 2Y ein hohes Niveau ausgeben.

Legen Sie ein niedriges Niveau f√ºr 1A fest, dann wird 1Y ein niedriges Niveau ausgeben, und 
der Motor wird sich drehen.

.. code-block:: c

    for(i=0;i<3;i++){
        delay(1000);
    }

Diese Schleife dient dazu, um 3*1000ms zu verz√∂gern.

.. code-block:: c

    digitalWrite(MotorEnable, LOW)

Wenn 1,2EN (Pin1) auf niedrigem Niveau ist, funktioniert L293D nicht. Der Motor h√∂rt auf sich zu drehen.

.. code-block:: c

    digitalWrite(MotorPin1, LOW)
    digitalWrite(MotorPin2, HIGH)

Kehren Sie den Stromfluss des Motors um, dann wird sich der Motor in umgekehrter Richtung drehen.

Ph√§nomen-Bild
------------------

.. image:: ../img/image119.jpeg