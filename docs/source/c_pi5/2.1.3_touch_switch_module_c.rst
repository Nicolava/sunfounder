.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _2.1.3_c_pi5:

2.1.3 Ber√ºhrungsschalter-Modul
====================================

Einf√ºhrung
-------------------

In diesem Projekt werden Sie das Ber√ºhrungsschalter-Modul kennenlernen. Es kann 
herk√∂mmliche Schaltertypen ersetzen und bietet dabei folgende Vorteile: bequeme Bedienung, 
feines Ber√ºhrungsgef√ºhl, pr√§zise Steuerung und minimaler mechanischer Verschlei√ü.

Ben√∂tigte Komponenten
------------------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

.. image:: ../img/2.1.3component.png
    :width: 700
    :align: center

Es ist definitiv praktisch, ein ganzes Set zu kaufen, hier ist der Link: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Sie k√∂nnen sie auch separat √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_touch_switch`
        - |link_touch_buy|

Schaltplan
---------------------

.. image:: ../img/2.1.3circuit.png
    :width: 500
    :align: center

Experimentelle Verfahren
------------------------------

**Schritt 1:** Bauen Sie den Schaltkreis.

.. image:: ../img/2.1.3fritzing.png
    :width: 700
    :align: center

**Schritt 2:** Verzeichnis wechseln.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/2.1.3/

**Schritt 3:** Kompilieren.

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.1.3_TouchSwitch.c -lwiringPi

**Schritt 4:** Ausf√ºhren.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

W√§hrend der Code ausgef√ºhrt wird, leuchtet die rote LED auf; wenn Sie das Ber√ºhrungsschalter-Modul antippen, schaltet sich die gelbe LED ein.

.. note::

    Wenn es nach dem Ausf√ºhren nicht funktioniert oder eine Fehlermeldung angezeigt wird: \"wiringPi.h: Datei oder Verzeichnis nicht gefunden\", beziehen Sie sich bitte auf :ref:`install_wiringpi`.

**Code**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define touchPin		   0
    #define led1		   3
    #define led2 		   2

    int main(void)
    {
        // When initialize wiring failed, print message to screen
        if(wiringPiSetup() == -1){
            printf(etup w"siringPi failed !");
            return 1; 
        }
        
        pinMode(touchPin, INPUT);
        pinMode(led1, OUTPUT);
        pinMode(led2, OUTPUT);
        
        while(1){
            // touch switch high, led1 on
            if(digitalRead(touchPin) == 1){
                digitalWrite(led1, LOW);
                digitalWrite(led2, HIGH);
                printf("You touch it! \r\n");
            }
            // touch switch low, led2 on
            if(digitalRead(touchPin) == 0){
                digitalWrite(led2, LOW);
                digitalWrite(led1, HIGH);
            }
        }

        return 0;
    }

**Code-Erkl√§rung**

.. code-block:: c

    #define touchPin		   0
    #define led1		   3
    #define led2 		   2
    
Die Pins GPIO17, GPIO22 und GPIO27 des T_Extension Boards entsprechen 
den Pins GPIO0, GPIO3 und GPIO2 in wiringPi. Weisen Sie GPIO0, GPIO3 und GPIO2 den Variablen 
``touchPin``, ``led1`` und ``led2`` zu.

.. code-block:: c

    pinMode(touchPin, INPUT);
    pinMode(led1, OUTPUT);
    pinMode(led2, OUTPUT);

Legen Sie ``led1`` und ``led2`` als Ausg√§nge fest, um Werte an sie zu senden, und setzen Sie ``touchPin`` als Eingang, um Werte von ihm zu lesen.

.. code-block:: c

    while(1){
        // touch switch high, led1 on
            if(digitalRead(touchPin) == 1){
            digitalWrite(led1, LOW);
            digitalWrite(led2, HIGH);
            printf("You touch it! \r\n");
        }
        // touch switch low, led2 on
        if(digitalRead(touchPin) == 0){
            digitalWrite(led2, LOW);
            digitalWrite(led1, HIGH);
        }
    }

Setzen Sie eine unendliche Schleife. Wenn Sie das Ber√ºhrungsschalter-Modul antippen, ist ``touchPin`` hoch, und led1 wird leuchten und "Sie haben es ber√ºhrt!" ausgeben. Wenn touchPin niedrig ist, wird led2 leuchten.

Ph√§nomen-Bild
--------------------

.. image:: ../img/2.1.3touch_switch_module.JPG
    :width: 500
    :align: center