.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _cpn_servo:

Servo
===========

.. image:: img/servo.png
    :align: center

Un servo est g√©n√©ralement compos√© des parties suivantes : bo√Ætier, arbre, syst√®me d'engrenages, potentiom√®tre, moteur √† courant continu et carte embarqu√©e.

Voici comment cela fonctionne : Le microcontr√¥leur envoie des signaux PWM au servo, puis la carte embarqu√©e dans le servo re√ßoit les signaux via la broche de signal et contr√¥le le moteur interne pour tourner. En cons√©quence, le moteur entra√Æne le syst√®me d'engrenages et motive ensuite l'arbre apr√®s la r√©duction de vitesse. L'arbre et le potentiom√®tre du servo sont connect√©s ensemble. Lorsque l'arbre tourne, il entra√Æne le potentiom√®tre, donc le potentiom√®tre envoie un signal de tension √† la carte embarqu√©e. Ensuite, la carte d√©termine la direction et la vitesse de rotation en fonction de la position actuelle, de sorte qu'elle puisse s'arr√™ter exactement √† la position d√©finie et s'y maintenir.

.. image:: img/servo_internal.png
    :align: center

L'angle est d√©termin√© par la dur√©e d'une impulsion appliqu√©e au fil de commande. Cela s'appelle la modulation de largeur d'impulsion (PWM). Le servo s'attend √† voir une impulsion toutes les 20 ms. La longueur de l'impulsion d√©termine jusqu'o√π le moteur tourne. Par exemple, une impulsion de 1,5 ms fera tourner le moteur √† la position de 90 degr√©s (position neutre).
Lorsqu'une impulsion est envoy√©e √† un servo qui est inf√©rieure √† 1,5 ms, le servo tourne vers une position et maintient son arbre de sortie √† un certain nombre de degr√©s dans le sens antihoraire par rapport au point neutre. Lorsque l'impulsion est plus large que 1,5 ms, l'effet inverse se produit. La largeur minimale et maximale de l'impulsion qui commandera le servo √† tourner vers une position valide est fonction de chaque servo. G√©n√©ralement, l'impulsion minimale sera d'environ 0,5 ms de large et l'impulsion maximale sera de 2,5 ms de large.

.. image:: img/servo_duty.png
    :width: 600
    :align: center

**Exemple**

* :ref:`1.3.2_c` (Projet C)
* :ref:`3.1.2_c` (Projet C)
* :ref:`1.3.2_py` (Projet Python)
* :ref:`4.1.8_py` (Projet Python)
