.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _cpn_keypad:

キーパッド
========================

キーパッドは12個または16個のOFF-(ON)ボタンから成る矩形の配列です。
各ボタンの接点は、リボンケーブルの接続やプリント基板への挿入に適したヘッダーを介してアクセスされます。
一部のキーパッドでは、各ボタンがヘッダー内の個々の接点に接続され、すべてのボタンが共通のグラウンドを共有しています。

.. image:: img/keypad314.png

よくあるケースでは、ボタンはマトリックスでエンコードされ、各ボタンがマトリックス内の一意の導体ペアをブリッジします。
この配置は、マイクロコントローラによるポーリングに適しており、それぞれの4つの水平なワイヤに順番に出力パルスを送るようプログラムできます。
各パルス中に、残りの4本の垂直ワイヤを順番にチェックし、どれが信号を伝えているのかを特定します。
信号が存在しない場合にマイクロコントローラの入力が不安定にならないように、プルアップまたはプルダウン抵抗器を入力ワイヤに追加すべきです。

**例**

* :ref:`2.1.8_c` (Cプロジェクト)
* :ref:`3.1.8_c` (Cプロジェクト)
* :ref:`3.1.11_c` (Cプロジェクト)
* :ref:`2.1.8_py` (Pythonプロジェクト)
* :ref:`4.1.14_py` (Pythonプロジェクト)
* :ref:`4.1.17_py` (Pythonプロジェクト)