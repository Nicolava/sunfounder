.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

 
Vid√©o 19 : Contr√¥le simple d'un servomoteur depuis un Raspberry Pi
=======================================================================================

Apprenez √† contr√¥ler un servomoteur avec un Raspberry Pi alors que Paul McQuarter vous guide √† travers le processus de configuration, de programmation et de test.

1. **Configuration mat√©rielle** : Paul d√©montre le c√¢blage correct et l'alignement du servomoteur avec le Raspberry Pi.
2. **Consid√©rations sur l'alimentation** : Il explique l'importance d'utiliser une alimentation externe pour les servomoteurs plus grands afin d'√©viter d'endommager le Raspberry Pi.
3. **Fondamentaux de la MLI** : Comprenez comment la modulation de largeur d'impulsion (MLI) contr√¥le la position du servomoteur en ajustant le cycle de travail du signal MLI.
4. **Impl√©mentation du code Python** : Parcourez le code Python pour configurer et contr√¥ler le servomoteur en utilisant les broches GPIO.
5. **Tests et calibration** : Apprenez √† tester et calibrer la plage de mouvement du servomoteur en entrant diff√©rents pourcentages de MLI.
6. **Gestion des erreurs** : D√©couvrez comment g√©rer les erreurs et assurer un nettoyage ad√©quat des broches GPIO en utilisant des blocs try-except en Python.

**Vid√©o**

.. raw:: html

    <iframe width="700" height="500" src="https://www.youtube.com/embed/i7hMx6YLR0Q?si=6xUhPw0Wvelt4UjQ" title="Lecteur vid√©o YouTube" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

